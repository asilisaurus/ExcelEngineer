const fs = require('fs');

// –ü–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ CommonJS, –∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –≤ TypeScript, –Ω—É–∂–Ω–æ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ts-node
const { spawn } = require('child_process');

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ ts-node
const testScript = `
import fs from 'fs';
import { perfectProcessor } from './server/services/excel-processor-perfect';

async function testPerfectProcessor() {
  try {
    console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–í–ï–†–®–ï–ù–ù–û–ì–û –ü–†–û–¶–ï–°–°–û–†–ê');
    console.log('=====================================');
    
    // –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
    const buffer = fs.readFileSync('uploads/Fortedetrim ORM report source.xlsx');
    
    console.log('üìÅ –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:', buffer.length, '–±–∞–π—Ç');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª
    const result = await perfectProcessor.processExcelFile(buffer, 'Fortedetrim ORM report source.xlsx');
    
    console.log('‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ë–†–ê–ë–û–¢–ö–ò:');
    console.log('=======================');
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log('  - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:', result.statistics.totalRows);
    console.log('  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤:', result.statistics.reviewsCount);
    console.log('  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:', result.statistics.commentsCount);
    console.log('  - –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è:', result.statistics.activeDiscussionsCount);
    console.log('  - –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã:', result.statistics.totalViews);
    console.log('  - –ü—Ä–æ—Ü–µ–Ω—Ç –≤–æ–≤–ª–µ—á–µ–Ω–∏—è:', result.statistics.engagementRate + '%');
    console.log('  - –ü–ª–æ—â–∞–¥–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏:', result.statistics.platformsWithData + '%');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const outputBuffer = await result.workbook.xlsx.writeBuffer();
    fs.writeFileSync('test_perfect_output.xlsx', outputBuffer);
    
    console.log('üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ test_perfect_output.xlsx');
    console.log('üìà –†–∞–∑–º–µ—Ä –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', outputBuffer.length, '–±–∞–π—Ç');
    
    console.log('\\nüéØ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!');
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:', error);
    console.error('Stack:', error.stack);
  }
}

testPerfectProcessor();
`;

// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π TypeScript —Ñ–∞–π–ª
fs.writeFileSync('temp_test.ts', testScript);

console.log('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ ts-node...');

// –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ ts-node
const tsNode = spawn('npx', ['ts-node', 'temp_test.ts'], { 
  stdio: 'inherit',
  shell: true 
});

tsNode.on('close', (code) => {
  console.log(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º ${code}`);
  
  // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  try {
    fs.unlinkSync('temp_test.ts');
  } catch (e) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
  }
});

tsNode.on('error', (error) => {
  console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  
  // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  try {
    fs.unlinkSync('temp_test.ts');
  } catch (e) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
  }
}); 