/**
 * ============================================================================
 * –¢–ï–°–¢–û–í–´–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –í–ê–õ–ò–î–ê–¶–ò–ò GOOGLE APPS SCRIPT –ü–†–û–¶–ï–°–°–û–†–ê
 * ============================================================================
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ Google Apps Script
 * ============================================================================
 */

// =============================================================================
// –ú–û–ö–û–í–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
// =============================================================================

const mockGoogleSheetsData = [
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ (—Å—Ç—Ä–æ–∫–∞ 0)
  ['—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', '–ø–ª–æ—â–∞–¥–∫–∞', '–ø—Ä–æ–¥—É–∫—Ç', '—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ', '—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', 
   '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', '–¥–∞—Ç–∞', '–Ω–∏–∫', '–∞–≤—Ç–æ—Ä', '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–µ–º—ã –Ω–∞ —Å—Ç–∞—Ä—Ç–µ', 
   '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞', '–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ', '–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ', '—Ç–∏–ø –ø–æ—Å—Ç–∞'],
  
  // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ (—Å—Ç—Ä–æ–∫–∞ 1)
  ['', '', '', '', '', '', '', '', '', '', '', '', '', ''],
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∞ 2)
  ['–û—Ç–∑—ã–≤—ã', '', '', '', '', '', '', '', '', '', '', '', '', ''],
  
  // –û—Ç–∑—ã–≤ 1 (—Å—Ç—Ä–æ–∫–∞ 3)
  ['–æ—Å–Ω–æ–≤–Ω–æ–µ', '–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç', '–¢–æ–≤–∞—Ä –ê', 'https://market.yandex.ru/review/1', 
   '–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!', '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ', '2024-12-01', 'user123', 
   '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤', '150', '280', '130', '4.2', '–æ—Å'],
  
  // –û—Ç–∑—ã–≤ 2 (—Å—Ç—Ä–æ–∫–∞ 4)
  ['–æ—Å–Ω–æ–≤–Ω–æ–µ', 'Ozon', '–¢–æ–≤–∞—Ä –ë', 'https://ozon.ru/review/2', 
   '–ö–∞—á–µ—Å—Ç–≤–æ —Ö–æ—Ä–æ—à–µ–µ, –¥–æ—Å—Ç–∞–≤–∫–∞ –±—ã—Å—Ç—Ä–∞—è', '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ', '2024-12-02', 'user456', 
   '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤', '200', '350', '150', '3.8', '–æ—Å'],
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∞ 5)
  ['–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', '', '', '', '', '', '', '', '', '', '', '', '', ''],
  
  // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π 1 (—Å—Ç—Ä–æ–∫–∞ 6)
  ['—Ü–µ–ª–µ–≤–æ–µ', '–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç', '–¢–æ–≤–∞—Ä –ê', 'https://market.yandex.ru/comment/1', 
   '–°–æ–≥–ª–∞—Å–µ–Ω —Å –æ—Ç–∑—ã–≤–æ–º, —Ç–æ–≤–∞—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ä–æ—à–∏–π', '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ', '2024-12-03', 
   'user789', '–°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤', '50', '80', '30', '2.1', '—Ü—Å'],
  
  // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π 2 (—Å—Ç—Ä–æ–∫–∞ 7)
  ['—Ü–µ–ª–µ–≤–æ–µ', 'Wildberries', '–¢–æ–≤–∞—Ä –í', 'https://wildberries.ru/comment/2', 
   '–ò—Å–ø–æ–ª—å–∑—É—é —É–∂–µ –º–µ—Å—è—Ü, –æ—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω', '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–æ', '2024-12-04', 
   'user101', '–ê–Ω–Ω–∞ –ê–Ω–Ω–µ–Ω–∫–æ–≤–∞', '75', '120', '45', '3.0', '—Ü—Å'],
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∞ 8)
  ['–û–±—Å—É–∂–¥–µ–Ω–∏—è', '', '', '', '', '', '', '', '', '', '', '', '', ''],
  
  // –û–±—Å—É–∂–¥–µ–Ω–∏–µ (—Å—Ç—Ä–æ–∫–∞ 9) - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–æ
  ['–æ–±—Å—É–∂–¥–µ–Ω–∏–µ', '–§–æ—Ä—É–º', '–¢–æ–≤–∞—Ä –ì', 'https://forum.ru/topic/1', 
   '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è', '–Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏', '2024-12-05', 
   'user202', '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞', '100', '150', '50', '1.5', '–ø—Å'],
  
  // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ (—Å—Ç—Ä–æ–∫–∞ 10)
  ['', '', '', '', '', '', '', '', '', '', '', '', '', '']
];

// =============================================================================
// –¢–ï–°–¢–û–í–´–ï –§–£–ù–ö–¶–ò–ò
// =============================================================================

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function runAllTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google Apps Script –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞...');
  
  const testResults = {
    headerDetection: testHeaderDetection(),
    contentTypeDetection: testContentTypeDetection(),
    dataExtraction: testDataExtraction(),
    filtering: testFiltering(),
    fullProcessing: testFullProcessing()
  };
  
  // –ü–æ–¥–≤–æ–¥–∏–º –∏—Ç–æ–≥–∏
  const passedTests = Object.values(testResults).filter(result => result.passed).length;
  const totalTests = Object.keys(testResults).length;
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`);
  console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${passedTests}/${totalTests}`);
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${totalTests - passedTests}/${totalTests}`);
  
  if (passedTests === totalTests) {
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  } else {
    console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞');
  }
  
  return testResults;
}

/**
 * –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
 */
function testHeaderDetection() {
  console.log('\nüîç –¢–µ—Å—Ç: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
  
  try {
    const headerInfo = findHeaders(mockGoogleSheetsData);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞–π–¥–µ–Ω—ã
    const expectedHeaders = ['—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', '–ø–ª–æ—â–∞–¥–∫–∞', '—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '—Ç–∏–ø –ø–æ—Å—Ç–∞'];
    const foundHeaders = Object.keys(headerInfo.mapping);
    
    const hasRequiredHeaders = expectedHeaders.every(header => 
      foundHeaders.includes(header)
    );
    
    if (hasRequiredHeaders && headerInfo.row === 0) {
      console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      return { passed: true, message: '–ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞–π–¥–µ–Ω—ã' };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
      return { passed: false, message: '–ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' };
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:', error);
    return { passed: false, message: error.message };
  }
}

/**
 * –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
function testContentTypeDetection() {
  console.log('\nüîç –¢–µ—Å—Ç: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
  
  try {
    const testCases = [
      { row: mockGoogleSheetsData[3], expected: 'review', description: '–û—Ç–∑—ã–≤ (–æ—Å)' },
      { row: mockGoogleSheetsData[4], expected: 'review', description: '–û—Ç–∑—ã–≤ (–æ—Å)' },
      { row: mockGoogleSheetsData[6], expected: 'comment', description: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (—Ü—Å)' },
      { row: mockGoogleSheetsData[7], expected: 'comment', description: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (—Ü—Å)' },
      { row: mockGoogleSheetsData[9], expected: 'unknown', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ (–ø—Å)' }
    ];
    
    let passed = 0;
    
    for (const testCase of testCases) {
      const result = determineContentType(testCase.row);
      
      if (result === testCase.expected) {
        console.log(`‚úÖ ${testCase.description}: ${result}`);
        passed++;
      } else {
        console.log(`‚ùå ${testCase.description}: –æ–∂–∏–¥–∞–ª–æ—Å—å ${testCase.expected}, –ø–æ–ª—É—á–µ–Ω–æ ${result}`);
      }
    }
    
    if (passed === testCases.length) {
      return { passed: true, message: '–í—Å–µ —Ç–∏–ø—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' };
    } else {
      return { passed: false, message: `–ü—Ä–æ–π–¥–µ–Ω–æ ${passed}/${testCases.length}` };
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
    return { passed: false, message: error.message };
  }
}

/**
 * –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 */
function testDataExtraction() {
  console.log('\nüîç –¢–µ—Å—Ç: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    const headerInfo = findHeaders(mockGoogleSheetsData);
    const testRow = mockGoogleSheetsData[3]; // –ü–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤
    
    const extractedData = extractRowData(testRow, 'review', headerInfo.mapping);
    
    if (extractedData && 
        extractedData.site === '–Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç' &&
        extractedData.text === '–û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!' &&
        extractedData.type === 'review' &&
        extractedData.views === 130 &&
        extractedData.engagement === 4.2) {
      
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log(`   –ü–ª–æ—â–∞–¥–∫–∞: ${extractedData.site}`);
      console.log(`   –¢–µ–∫—Å—Ç: ${extractedData.text.substring(0, 30)}...`);
      console.log(`   –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${extractedData.views}`);
      console.log(`   –í–æ–≤–ª–µ—á–µ–Ω–∏–µ: ${extractedData.engagement}`);
      
      return { passed: true, message: '–î–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
      return { passed: false, message: '–î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º' };
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    return { passed: false, message: error.message };
  }
}

/**
 * –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫
 */
function testFiltering() {
  console.log('\nüîç –¢–µ—Å—Ç: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫');
  
  try {
    const testCases = [
      { row: mockGoogleSheetsData[0], isHeader: false, isEmpty: false, description: '–°—Ç—Ä–æ–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤' },
      { row: mockGoogleSheetsData[1], isHeader: false, isEmpty: true, description: '–ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞' },
      { row: mockGoogleSheetsData[2], isHeader: true, isEmpty: false, description: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ "–û—Ç–∑—ã–≤—ã"' },
      { row: mockGoogleSheetsData[5], isHeader: true, isEmpty: false, description: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"' },
      { row: mockGoogleSheetsData[8], isHeader: true, isEmpty: false, description: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ "–û–±—Å—É–∂–¥–µ–Ω–∏—è"' },
      { row: mockGoogleSheetsData[3], isHeader: false, isEmpty: false, description: '–°—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏' }
    ];
    
    let passed = 0;
    
    for (const testCase of testCases) {
      const isEmpty = isEmptyRow(testCase.row);
      const isHeader = isHeaderRow(testCase.row);
      
      if (isEmpty === testCase.isEmpty && isHeader === testCase.isHeader) {
        console.log(`‚úÖ ${testCase.description}: –ø—É—Å—Ç–∞—è=${isEmpty}, –∑–∞–≥–æ–ª–æ–≤–æ–∫=${isHeader}`);
        passed++;
      } else {
        console.log(`‚ùå ${testCase.description}: –æ–∂–∏–¥–∞–ª–æ—Å—å –ø—É—Å—Ç–∞—è=${testCase.isEmpty}, –∑–∞–≥–æ–ª–æ–≤–æ–∫=${testCase.isHeader}, –ø–æ–ª—É—á–µ–Ω–æ –ø—É—Å—Ç–∞—è=${isEmpty}, –∑–∞–≥–æ–ª–æ–≤–æ–∫=${isHeader}`);
      }
    }
    
    if (passed === testCases.length) {
      return { passed: true, message: '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' };
    } else {
      return { passed: false, message: `–ü—Ä–æ–π–¥–µ–Ω–æ ${passed}/${testCases.length}` };
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:', error);
    return { passed: false, message: error.message };
  }
}

/**
 * –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
function testFullProcessing() {
  console.log('\nüîç –¢–µ—Å—Ç: –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    const processedData = processData(mockGoogleSheetsData);
    
    // –û–∂–∏–¥–∞–µ–º: 2 –æ—Ç–∑—ã–≤–∞ + 2 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è = 4 –∑–∞–ø–∏—Å–∏
    const expectedTotal = 4;
    const expectedReviews = 2;
    const expectedComments = 2;
    
    const actualTotal = processedData.length;
    const actualReviews = processedData.filter(row => row.type === 'review').length;
    const actualComments = processedData.filter(row => row.type === 'comment').length;
    
    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${actualTotal}`);
    console.log(`   –û—Ç–∑—ã–≤—ã: ${actualReviews}`);
    console.log(`   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${actualComments}`);
    
    if (actualTotal === expectedTotal && 
        actualReviews === expectedReviews && 
        actualComments === expectedComments) {
      
      console.log('‚úÖ –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
      return { passed: true, message: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞' };
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏');
      console.log(`   –û–∂–∏–¥–∞–ª–æ—Å—å: –≤—Å–µ–≥–æ=${expectedTotal}, –æ—Ç–∑—ã–≤—ã=${expectedReviews}, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏=${expectedComments}`);
      console.log(`   –ü–æ–ª—É—á–µ–Ω–æ: –≤—Å–µ–≥–æ=${actualTotal}, –æ—Ç–∑—ã–≤—ã=${actualReviews}, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏=${actualComments}`);
      return { passed: false, message: '–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π' };
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error);
    return { passed: false, message: error.message };
  }
}

// =============================================================================
// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–û–í–´–ï –§–£–ù–ö–¶–ò–ò
// =============================================================================

/**
 * –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 */
function performanceTest() {
  console.log('\n‚è±Ô∏è –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
  
  try {
    const start = Date.now();
    
    // –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–æ–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const largeDataset = [];
    for (let i = 0; i < 1000; i++) {
      largeDataset.push(...mockGoogleSheetsData);
    }
    
    const result = processData(largeDataset);
    
    const end = Date.now();
    const processingTime = end - start;
    
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ${largeDataset.length} —Å—Ç—Ä–æ–∫: ${processingTime}–º—Å`);
    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${result.length}`);
    console.log(`üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${Math.round(largeDataset.length / processingTime * 1000)} —Å—Ç—Ä–æ–∫/—Å–µ–∫`);
    
    return { time: processingTime, processed: result.length };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
    return { error: error.message };
  }
}

/**
 * –¢–µ—Å—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
 */
function edgeCaseTests() {
  console.log('\nüî¨ –¢–µ—Å—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤');
  
  const testCases = [
    {
      name: '–ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤',
      data: [],
      shouldFail: true
    },
    {
      name: '–¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏',
      data: [mockGoogleSheetsData[0]],
      shouldFail: false
    },
    {
      name: '–î–∞–Ω–Ω—ã–µ –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤',
      data: [mockGoogleSheetsData[3], mockGoogleSheetsData[4]],
      shouldFail: false
    },
    {
      name: '–¢–æ–ª—å–∫–æ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏',
      data: [['', '', '', ''], ['', '', '', '']],
      shouldFail: false
    }
  ];
  
  let passed = 0;
  
  for (const testCase of testCases) {
    try {
      const result = processData(testCase.data);
      
      if (testCase.shouldFail) {
        console.log(`‚ùå ${testCase.name}: –æ–∂–∏–¥–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞, –Ω–æ –ø–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç`);
      } else {
        console.log(`‚úÖ ${testCase.name}: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${result.length} –∑–∞–ø–∏—Å–µ–π`);
        passed++;
      }
      
    } catch (error) {
      if (testCase.shouldFail) {
        console.log(`‚úÖ ${testCase.name}: –æ–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ - ${error.message}`);
        passed++;
      } else {
        console.log(`‚ùå ${testCase.name}: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ - ${error.message}`);
      }
    }
  }
  
  console.log(`üìä –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏: ${passed}/${testCases.length} –ø—Ä–æ–π–¥–µ–Ω–æ`);
  return { passed: passed, total: testCases.length };
}

// =============================================================================
// –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í
// =============================================================================

// –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Google Apps Script
function runGoogleAppsScriptTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ Google Apps Script...');
  return runAllTests();
}

// –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Node.js
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    runAllTests,
    performanceTest,
    edgeCaseTests
  };
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (typeof window === 'undefined' && typeof global !== 'undefined') {
  // Node.js environment
  console.log('üß™ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...');
  runAllTests();
}