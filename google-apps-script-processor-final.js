/**
 * ============================================================================
 * GOOGLE APPS SCRIPT PROCESSOR - FINAL VERSION
 * ============================================================================
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
 * –û—Å–Ω–æ–≤–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:
 * - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ –∫–æ–ª–æ–Ω–∫–µ "—Ç–∏–ø –ø–æ—Å—Ç–∞"
 * - –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è Google Sheets
 * - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
 * - –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
 * ============================================================================
 */

// =============================================================================
// –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
// =============================================================================

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Google Sheets
 */
function processGoogleSheets() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É Google Sheets...');
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const sourceData = getSourceData();
    console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${sourceData.length} —Å—Ç—Ä–æ–∫ –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞`);
    
    // 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const processedData = processData(sourceData);
    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: –æ—Ç–∑—ã–≤–æ–≤ ${processedData.statistics.reviewsCount}, —Ü–µ–ª–µ–≤—ã—Ö ${processedData.statistics.targetedCount}, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö ${processedData.statistics.socialCount}`);
    
    // 3. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Ñ–∞–π–ª
    const resultFileId = createResultFile(processedData);
    console.log(`üíæ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: ${resultFileId}`);
    
    return {
      success: true,
      sourceRows: sourceData.length,
      processedRows: processedData.statistics.totalRows,
      reviewsCount: processedData.statistics.reviewsCount,
      targetedCount: processedData.statistics.targetedCount,
      socialCount: processedData.statistics.socialCount,
      totalViews: processedData.statistics.totalViews,
      totalEngagement: processedData.statistics.totalEngagement,
      resultFileId: resultFileId,
      statistics: processedData.statistics
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ:', error);
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets
 */
function getSourceData() {
  // ID —Ä–µ–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const SHEET_ID = '1RT8T5gnDPe0KMikTmVNdSvxqDal3aQUmelpEwItgxMI';
  
  try {
    const spreadsheet = SpreadsheetApp.openById(SHEET_ID);
    const sheets = spreadsheet.getSheets();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –ª–∏—Å—Ç–∞ —Å —Ç–µ–∫—É—â–∏–º –º–µ—Å—è—Ü–µ–º
    const targetSheet = findCurrentMonthSheet(sheets);
    
    if (!targetSheet) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –ª–∏—Å—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞');
    }
    
    console.log(`üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏—Å—Ç: ${targetSheet.getName()}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞
    const range = targetSheet.getDataRange();
    const values = range.getValues();
    
    console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${values.length} —Å—Ç—Ä–æ–∫ –∏–∑ –ª–∏—Å—Ç–∞ ${targetSheet.getName()}`);
    
    return values;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
}

/**
 * –ü–æ–∏—Å–∫ –ª–∏—Å—Ç–∞ —Å —Ç–µ–∫—É—â–∏–º –º–µ—Å—è—Ü–µ–º
 */
function findCurrentMonthSheet(sheets) {
  const currentMonth = new Date().getMonth();
  const monthNames = ['—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞–π', '–∏—é–Ω', 
                     '–∏—é–ª', '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫'];
  
  // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  for (let sheet of sheets) {
    const sheetName = sheet.getName().toLowerCase();
    if (sheetName.includes(monthNames[currentMonth])) {
      return sheet;
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
  return sheets[0];
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
 */
function processData(rawData) {
  if (!rawData || rawData.length === 0) {
    throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
  }
  
  // 1. –ü–æ–∏—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  const headerInfo = findHeaders(rawData);
  console.log(`üîç –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: ${headerInfo.row}`);
  
  // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
  const processedData = {
    reviews: [],
    targeted: [],
    social: [],
    statistics: {
      totalRows: 0,
      reviewsCount: 0,
      targetedCount: 0,
      socialCount: 0,
      totalViews: 0,
      totalEngagement: 0
    }
  };
  
  let currentSection = null;
  
  // 3. –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å—Ç—Ä–æ–∫–∞–º
  for (let i = 0; i < rawData.length; i++) {
    const row = rawData[i];
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    if (isEmptyRow(row)) continue;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–∫—Ü–∏—é –ø–æ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–µ
    const firstCell = (row[0] || '').toString().toLowerCase().trim();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º —Ä–∞–∑–¥–µ–ª–∞
    if (isSectionHeader(firstCell)) {
      currentSection = determineSectionType(firstCell);
      console.log(`üìã –ù–∞–π–¥–µ–Ω —Ä–∞–∑–¥–µ–ª: ${currentSection} (—Å—Ç—Ä–æ–∫–∞ ${i + 1})`);
      continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    if (isTableHeader(row)) {
      console.log(`üìä –ü—Ä–æ–ø—É—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã: —Å—Ç—Ä–æ–∫–∞ ${i + 1}`);
      continue;
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    if (currentSection && isDataRow(row, headerInfo.mapping)) {
      const processedRow = extractRowData(row, currentSection, headerInfo.mapping);
      
      if (processedRow) {
        processedData[currentSection].push(processedRow);
        processedData.statistics.totalRows++;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        switch (currentSection) {
          case 'reviews':
            processedData.statistics.reviewsCount++;
            break;
          case 'targeted':
            processedData.statistics.targetedCount++;
            break;
          case 'social':
            processedData.statistics.socialCount++;
            break;
        }
        
        processedData.statistics.totalViews += processedRow.views || 0;
        processedData.statistics.totalEngagement += processedRow.engagement || 0;
        
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ${i + 1}: ${processedRow.site} - ${processedRow.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤`);
      }
    }
  }
  
  console.log(`üìä –ò—Ç–æ–≥–æ: –æ—Ç–∑—ã–≤–æ–≤ ${processedData.statistics.reviewsCount}, —Ü–µ–ª–µ–≤—ã—Ö ${processedData.statistics.targetedCount}, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö ${processedData.statistics.socialCount}`);
  console.log(`üìà –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${processedData.statistics.totalViews}, –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: ${processedData.statistics.totalEngagement}`);
  
  return processedData;
}

/**
 * –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
 */
function findHeaders(data) {
  const columnMapping = {};
  
  for (let i = 0; i < Math.min(10, data.length); i++) {
    const row = data[i];
    const rowStr = row.map(cell => (cell || '').toString().toLowerCase()).join(' ');
    
    if (rowStr.includes('—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è') || 
        rowStr.includes('–ø–ª–æ—â–∞–¥–∫–∞') || 
        rowStr.includes('—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')) {
      
      // –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫
      row.forEach((cell, index) => {
        const cleanHeader = (cell || '').toString().toLowerCase().trim();
        if (cleanHeader) {
          columnMapping[cleanHeader] = index;
        }
      });
      
      return {
        row: i,
        mapping: columnMapping
      };
    }
  }
  
  // –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥
  return {
    row: 0,
    mapping: getDefaultMapping()
  };
}

/**
 * –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è Google Sheets
 */
function getDefaultMapping() {
  return {
    '—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è': 0,
    '–ø–ª–æ—â–∞–¥–∫–∞': 1,
    '–ø—Ä–æ–¥—É–∫—Ç': 2,
    '—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ': 3,
    '—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è': 4,
    '—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏': 5,
    '–¥–∞—Ç–∞': 6,
    '–Ω–∏–∫': 7,
    '–∞–≤—Ç–æ—Ä': 8,
    '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–µ–º—ã –Ω–∞ —Å—Ç–∞—Ä—Ç–µ': 9,
    '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞': 10,
    '–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ': 11,
    '–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ': 12,
    '—Ç–∏–ø –ø–æ—Å—Ç–∞': 13
  };
}



/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º —Ä–∞–∑–¥–µ–ª–∞
 */
function isSectionHeader(text) {
  const sectionPatterns = [
    '–æ—Ç–∑—ã–≤—ã —Å–∞–π—Ç–æ–≤', '–æ—Å',
    '—Ü–µ–ª–µ–≤—ã–µ —Å–∞–π—Ç—ã', '—Ü—Å', 
    '–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ', '–ø—Å',
    '–æ—Ç–∑—ã–≤', '—Ü–µ–ª–µ–≤—ã–µ', '–ø–ª–æ—â–∞–¥–∫–∏'
  ];
  
  return sectionPatterns.some(pattern => text.includes(pattern));
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ä–∞–∑–¥–µ–ª–∞
 */
function determineSectionType(text) {
  if (text.includes('–æ—Ç–∑—ã–≤') || text.includes('–æ—Å')) {
    return 'reviews';
  }
  if (text.includes('—Ü–µ–ª–µ–≤—ã–µ') || text.includes('—Ü—Å')) {
    return 'targeted';
  }
  if (text.includes('–ø–ª–æ—â–∞–¥–∫–∏') || text.includes('–ø—Å')) {
    return 'social';
  }
  return 'other';
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º —Ç–∞–±–ª–∏—Ü—ã
 */
function isTableHeader(row) {
  if (!row || row.length === 0) return false;
  
  const rowText = row.join(' ').toLowerCase();
  const headerPatterns = ['—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', '–ø–ª–æ—â–∞–¥–∫–∞', '—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'];
  
  return headerPatterns.some(pattern => rowText.includes(pattern));
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã–º–∏
 */
function isDataRow(row, mapping) {
  if (!row || row.length < 3) return false;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const platformIndex = mapping['–ø–ª–æ—â–∞–¥–∫–∞'] || 1;
  const textIndex = mapping['—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'] || 4;
  
  const platform = row[platformIndex];
  const text = row[textIndex];
  
  return platform && text && 
         platform.toString().trim().length > 0 && 
         text.toString().trim().length > 10;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–æ–π
 */
function isEmptyRow(row) {
  return !row || row.every(cell => !cell || cell.toString().trim() === '');
}

/**
 * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç—Ä–æ–∫–∏
 */
function extractRowData(row, sectionType, mapping) {
  try {
    // –ò–Ω–¥–µ–∫—Å—ã –∫–æ–ª–æ–Ω–æ–∫ (—Å fallback –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏)
    const placementTypeIndex = mapping['—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è'] || 0;
    const siteIndex = mapping['–ø–ª–æ—â–∞–¥–∫–∞'] || 1;
    const productIndex = mapping['–ø—Ä–æ–¥—É–∫—Ç'] || 2;
    const linkIndex = mapping['—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ'] || 3;
    const textIndex = mapping['—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'] || 4;
    const approvalIndex = mapping['—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'] || 5;
    const dateIndex = mapping['–¥–∞—Ç–∞'] || 6;
    const nicknameIndex = mapping['–Ω–∏–∫'] || 7;
    const authorIndex = mapping['–∞–≤—Ç–æ—Ä'] || 8;
    const startViewsIndex = mapping['–ø—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–µ–º—ã –Ω–∞ —Å—Ç–∞—Ä—Ç–µ'] || 9;
    const endViewsIndex = mapping['–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞'] || 10;
    const viewsIndex = mapping['–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ'] || 11;
    const engagementIndex = mapping['–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ'] || 12;
    const postTypeIndex = mapping['—Ç–∏–ø –ø–æ—Å—Ç–∞'] || 13;
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const placementType = cleanValue(row[placementTypeIndex]);
    const site = cleanValue(row[siteIndex]);
    const product = cleanValue(row[productIndex]);
    const link = cleanValue(row[linkIndex]);
    const text = cleanValue(row[textIndex]);
    const approval = cleanValue(row[approvalIndex]);
    const date = cleanValue(row[dateIndex]);
    const nickname = cleanValue(row[nicknameIndex]);
    const author = cleanValue(row[authorIndex]);
    const startViews = extractViews(row[startViewsIndex]);
    const endViews = extractViews(row[endViewsIndex]);
    const views = extractViews(row[viewsIndex]);
    const engagement = extractEngagement(row[engagementIndex]);
    const postType = cleanValue(row[postTypeIndex]);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!site || !text) {
      return null;
    }
    
    return {
      section: sectionType,
      placementType: placementType,
      site: site,
      product: product,
      link: link,
      text: text,
      approval: approval,
      date: date,
      nickname: nickname,
      author: author,
      startViews: startViews,
      endViews: endViews,
      views: views,
      engagement: engagement,
      postType: postType
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∏:', error);
    return null;
  }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è —è—á–µ–π–∫–∏
 */
function cleanValue(value) {
  if (!value) return '';
  return value.toString().trim();
}

/**
 * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
 */
function extractViews(value) {
  if (!value) return 0;
  
  const str = value.toString().replace(/\D/g, '');
  const num = parseInt(str);
  
  return isNaN(num) ? 0 : num;
}

/**
 * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è
 */
function extractEngagement(value) {
  if (!value) return 0;
  
  const str = value.toString().replace(/[^\d.]/g, '');
  const num = parseFloat(str);
  
  return isNaN(num) ? 0 : num;
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
 */
function createResultFile(processedData) {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–ø—Ä–µ–¥—à–∏—Ç
    const currentDate = new Date();
    const monthNames = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
                       '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'];
    
    const fileName = `–†–µ–∑—É–ª—å—Ç–∞—Ç_${monthNames[currentDate.getMonth()]}_${currentDate.getFullYear()}`;
    const spreadsheet = SpreadsheetApp.create(fileName);
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç
    const sheet = spreadsheet.getActiveSheet();
    sheet.setName('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã');
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = [
      '–†–∞–∑–¥–µ–ª', '–¢–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', '–ü–ª–æ—â–∞–¥–∫–∞', '–ü—Ä–æ–¥—É–∫—Ç', '–°—Å—ã–ª–∫–∞', 
      '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '–î–∞—Ç–∞', '–ê–≤—Ç–æ—Ä', '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ–ª—É—á–µ–Ω–æ', '–í–æ–≤–ª–µ—á–µ–Ω–∏–µ'
    ];
    sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const headerRange = sheet.getRange(1, 1, 1, headers.length);
    headerRange.setFontWeight('bold');
    headerRange.setBackground('#4285f4');
    headerRange.setFontColor('#ffffff');
    
    let currentRow = 2;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
    const sections = [
      { key: 'reviews', name: '–û–¢–ó–´–í–´ –°–ê–ô–¢–û–í (–û–°)' },
      { key: 'targeted', name: '–¶–ï–õ–ï–í–´–ï –°–ê–ô–¢–´ (–¶–°)' },
      { key: 'social', name: '–ü–õ–û–©–ê–î–ö–ò –°–û–¶–ò–ê–õ–¨–ù–´–ï (–ü–°)' }
    ];
    
    sections.forEach(section => {
      const sectionData = processedData[section.key] || [];
      
      if (sectionData.length > 0) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        sheet.getRange(currentRow, 1).setValue(section.name);
        sheet.getRange(currentRow, 1, 1, headers.length).setBackground('#e8f0fe');
        sheet.getRange(currentRow, 1, 1, headers.length).setFontWeight('bold');
        currentRow++;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∞
        sectionData.forEach(row => {
          const rowData = [
            section.key,
            row.placementType || '',
            row.site || '',
            row.product || '',
            row.link || '',
            (row.text || '').substring(0, 100) + (row.text && row.text.length > 100 ? '...' : ''),
            row.date || '',
            row.author || '',
            row.views || 0,
            row.engagement || 0
          ];
          
          sheet.getRange(currentRow, 1, 1, rowData.length).setValues([rowData]);
          currentRow++;
        });
        
        currentRow++; // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏
      }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    const stats = processedData.statistics || {};
    const totalData = [
      '–ò–¢–û–ì–û',
      '',
      `–í—Å–µ–≥–æ –ø–ª–æ—â–∞–¥–æ–∫: ${(processedData.reviews?.length || 0) + (processedData.targeted?.length || 0) + (processedData.social?.length || 0)}`,
      '',
      '',
      `–û—Ç–∑—ã–≤–æ–≤: ${stats.reviewsCount || 0}, –¶–µ–ª–µ–≤—ã—Ö: ${stats.targetedCount || 0}, –°–æ—Ü–∏–∞–ª—å–Ω—ã—Ö: ${stats.socialCount || 0}`,
      '',
      '',
      stats.totalViews || 0,
      stats.totalEngagement || 0
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    sheet.getRange(currentRow, 1, 1, headers.length).setValues([Array(headers.length).fill('')]);
    currentRow++;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    const totalRange = sheet.getRange(currentRow, 1, 1, totalData.length);
    totalRange.setValues([totalData]);
    totalRange.setFontWeight('bold');
    totalRange.setBackground('#e8f0fe');
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–ª–æ–Ω–æ–∫
    sheet.autoResizeColumns(1, headers.length);
    
    console.log(`üíæ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${fileName}`);
    console.log(`üîó ID —Ñ–∞–π–ª–∞: ${spreadsheet.getId()}`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –æ—Ç–∑—ã–≤–æ–≤ ${stats.reviewsCount}, —Ü–µ–ª–µ–≤—ã—Ö ${stats.targetedCount}, —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö ${stats.socialCount}`);
    console.log(`üìà –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${stats.totalViews}, –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: ${stats.totalEngagement}`);
    
    return spreadsheet.getId();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
    throw error;
  }
}

// =============================================================================
// –¢–ï–°–¢–û–í–´–ï –§–£–ù–ö–¶–ò–ò
// =============================================================================

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
 */
function testProcessor() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
  
  try {
    const result = processGoogleSheets();
    
    if (result.success) {
      console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: ${result.processedRows}`);
      console.log(`üîó ID —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: ${result.resultFileId}`);
    } else {
      console.log('‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π:', result.error);
    }
    
    return result;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    return { success: false, error: error.message };
  }
}

/**
 * –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
 */
function analyzeDataStructure() {
  console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    const sourceData = getSourceData();
    
    if (sourceData.length === 0) {
      console.log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
      return;
    }
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫
    for (let i = 0; i < Math.min(10, sourceData.length); i++) {
      const row = sourceData[i];
      console.log(`–°—Ç—Ä–æ–∫–∞ ${i + 1}:`, row.slice(0, 5).map(cell => 
        (cell || '').toString().substring(0, 30)
      ));
    }
    
    // –ü–æ–∏—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    const headerInfo = findHeaders(sourceData);
    console.log('üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏:', Object.keys(headerInfo.mapping));
    
    return {
      totalRows: sourceData.length,
      headerRow: headerInfo.row,
      columns: Object.keys(headerInfo.mapping)
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:', error);
    return { error: error.message };
  }
}

// =============================================================================
// –ì–õ–ê–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ü–£–°–ö–ê
// =============================================================================

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ Google Apps Script
 */
function main() {
  return processGoogleSheets();
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function runTest() {
  return testProcessor();
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö
 */
function runAnalysis() {
  return analyzeDataStructure();
}