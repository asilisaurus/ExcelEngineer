/**
 * üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –ì–ò–ë–ö–ò–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê –ë–≠–ö–ê–ì–ï–ù–¢–ê 1
 * Google Apps Script –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
 * –í–µ—Ä—Å–∏—è: 3.1.0 - –≠–¢–ê–õ–û–ù–ù–´–ï –õ–ò–°–¢–´ –í –¢–û–ô –ñ–ï –¢–ê–ë–õ–ò–¶–ï
 * 
 * –ê–≤—Ç–æ—Ä: AI Assistant + Background Agent bc-851d0563-ea94-47b9-ba36-0f832bafdb25
 * –î–∞—Ç–∞: 2025
 */

// ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê ====================

const CONFIG = {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–û–°–ù–û–í–ê–ù–´ –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)
  STRUCTURE: {
    headerRow: 4,        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –í–°–ï–ì–î–ê –≤ —Å—Ç—Ä–æ–∫–µ 4
    dataStartRow: 5,     // –î–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å —Å—Ç—Ä–æ–∫–∏ 5
    infoRows: [1, 2, 3], // –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å—Ç—Ä–æ–∫–∞—Ö 1-3
    maxRows: 10000
  },
  
  // –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–û–°–ù–û–í–ê–ù–ê –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)
  CONTENT_TYPES: {
    REVIEWS: ['–û–°', '–û—Ç–∑—ã–≤—ã –°–∞–π—Ç–æ–≤', '–æ—Å', '–æ—Ç–∑—ã–≤—ã —Å–∞–π—Ç–æ–≤'],
    TARGETED: ['–¶–°', '–¶–µ–ª–µ–≤—ã–µ –°–∞–π—Ç—ã', '—Ü—Å', '—Ü–µ–ª–µ–≤—ã–µ —Å–∞–π—Ç—ã'],
    SOCIAL: ['–ü–°', '–ü–ª–æ—â–∞–¥–∫–∏ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ', '–ø—Å', '–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ']
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ (–≥–∏–±–∫–∏–µ)
  COLUMNS: {
    PLATFORM: ['–ø–ª–æ—â–∞–¥–∫–∞', 'platform', 'site', '–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '–∏—Å—Ç–æ—á–Ω–∏–∫'],
    TEXT: ['—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '—Ç–µ–∫—Å—Ç', 'message', 'content', '—Å–æ–æ–±—â–µ–Ω–∏–µ', '–æ–ø–∏—Å–∞–Ω–∏–µ'],
    DATE: ['–¥–∞—Ç–∞', 'date', 'created', '–≤—Ä–µ–º—è', '–¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è'],
    AUTHOR: ['–∞–≤—Ç–æ—Ä', '–Ω–∏–∫', 'author', 'nickname', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', '–∏–º—è'],
    VIEWS: ['–ø—Ä–æ—Å–º–æ—Ç—Ä—ã', '–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ', 'views', '–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤', '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤'],
    ENGAGEMENT: ['–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ', 'engagement', '–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ'],
    POST_TYPE: ['—Ç–∏–ø –ø–æ—Å—Ç–∞', '—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', 'post_type', '—Ç–∏–ø', '–∫–∞—Ç–µ–≥–æ—Ä–∏—è'],
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    THEME: ['—Ç–µ–º–∞', 'theme', 'subject', '–∑–∞–≥–æ–ª–æ–≤–æ–∫'],
    LINK: ['—Å—Å—ã–ª–∫–∞', 'link', 'url', '–∞–¥—Ä–µ—Å'],
    RATING: ['–æ—Ü–µ–Ω–∫–∞', 'rating', '—Ä–µ–π—Ç–∏–Ω–≥', '–∑–≤–µ–∑–¥—ã']
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  FORMATTING: {
    DATE_FORMAT: 'dd.mm.yyyy',
    NUMBER_FORMAT: '#,##0',
    CURRENCY_FORMAT: '#,##0 ‚ÇΩ'
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  TESTING: {
    ENABLE_DEBUG: true,
    LOG_DETAILS: true,
    VALIDATE_RESULTS: true
  }
};

// ==================== –ö–õ–ê–°–° –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê ====================

/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
 * –û–°–ù–û–í–ê–ù –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1
 * –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô: —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –∏—Å—Ö–æ–¥–Ω–∏–∫–∞–º–∏, –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —ç—Ç–∞–ª–æ–Ω–æ–≤
 */
class FinalMonthlyReportProcessor {
  constructor() {
    this.stats = {
      totalRows: 0,
      reviewsCount: 0,
      targetedCount: 0,
      socialCount: 0,
      totalViews: 0,
      processingTime: 0,
      errors: []
    };
    
    this.columnMapping = {};
    this.monthInfo = null;
    this.contentSections = {
      reviews: [],
      targeted: [],
      social: []
    };
  }

  /**
   * –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞
   */
  processReport(spreadsheetId, sheetName = null) {
    const startTime = Date.now();
    
    try {
      console.log('üöÄ FINAL PROCESSOR - –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –ë—ç–∫–∞–≥–µ–Ω—Ç–∞ 1');
      
      // 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
      const sourceData = this.getSourceData(spreadsheetId, sheetName);
      
      // 2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ (sheetName –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ)
      this.monthInfo = this.detectMonth(sourceData, sheetName);
      console.log(`üìÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω –º–µ—Å—è—Ü: ${this.monthInfo.name} ${this.monthInfo.year}`);
      
      // 3. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–û–°–ù–û–í–ê–ù –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)
      this.analyzeDataStructure(sourceData);
      
      // 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const processedData = this.processData(sourceData);
      
      // 5. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
      const reportUrl = this.createReport(processedData);
      
      // 6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      this.stats.processingTime = Date.now() - startTime;
      
      console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', this.stats);
      
      return {
        success: true,
        reportUrl: reportUrl,
        statistics: this.stats,
        monthInfo: this.monthInfo
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error);
      this.stats.errors.push(error.toString());
      
      return {
        success: false,
        error: error.toString(),
        statistics: this.stats
      };
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–û–ë–ù–û–í–õ–ï–ù–û –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê)
   */
  getSourceData(spreadsheetId, sheetName) {
    const spreadsheet = SpreadsheetApp.openById(spreadsheetId);
    
    const sheet = sheetName ? spreadsheet.getSheetByName(sheetName) : spreadsheet.getActiveSheet();
    
    if (!sheet) {
      throw new Error(`–õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    const data = sheet.getDataRange().getValues();
    this.stats.totalRows = data.length;
    
    console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.length} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö`);
    console.log(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ ${CONFIG.STRUCTURE.headerRow}, –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏ ${CONFIG.STRUCTURE.dataStartRow}`);
    
    return data;
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏–∑ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∏ 1-3)
   */
  detectMonth(data, sheetName = null) {
    // 1. –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—è—Ü –∏–∑ sheetName (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
    if (sheetName) {
      const monthFromSheet = this.extractMonthFromText(sheetName);
      if (monthFromSheet) {
        console.log(`üìÖ –ú–µ—Å—è—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –∏–º–µ–Ω–∏ –ª–∏—Å—Ç–∞ (–∞—Ä–≥—É–º–µ–Ω—Ç): ${monthFromSheet.name} ${monthFromSheet.year}`);
        return { ...monthFromSheet, detectedFrom: 'sheet' };
      }
    }
    // 2. –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—è—Ü –∏–∑ –∏–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
    try {
      const activeSheet = SpreadsheetApp.getActiveSheet();
      if (activeSheet) {
        const activeSheetName = activeSheet.getName();
        const monthFromSheet = this.extractMonthFromText(activeSheetName);
        if (monthFromSheet) {
          console.log(`üìÖ –ú–µ—Å—è—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –∏–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞: ${monthFromSheet.name} ${monthFromSheet.year}`);
          return { ...monthFromSheet, detectedFrom: 'sheet' };
        }
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞:', error.message);
    }
    // 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –∏—â–µ–º –≤ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∏ 1-3)
    for (let i = 0; i < Math.min(3, data.length); i++) {
      const rowText = data[i].join(' ').toLowerCase();
      const monthFromMeta = this.extractMonthFromText(rowText);
      if (monthFromMeta) {
        console.log(`üìÖ –ú–µ—Å—è—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: ${monthFromMeta.name} ${monthFromMeta.year}`);
        return { ...monthFromMeta, detectedFrom: 'meta' };
      }
    }
    // 4. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    const now = new Date();
    return {
      name: this.getMonthName(now.getMonth()),
      short: this.getMonthShort(now.getMonth()),
      number: now.getMonth() + 1,
      year: now.getFullYear(),
      detectedFrom: 'default'
    };
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–ò–°–ü–†–ê–í–õ–ï–ù–û –ù–ê –û–°–ù–û–í–ï –†–ï–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•)
   */
  analyzeDataStructure(data) {
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≤—Å–µ—Ö –º–µ—Å—è—Ü–µ–≤
    this.columnMapping = this.getColumnMapping();
    
    console.log('üó∫Ô∏è –ú–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π):', this.columnMapping);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    const requiredColumns = ['platform', 'text', 'date'];
    const missingColumns = requiredColumns.filter(col => this.columnMapping[col] === undefined);
    
    if (missingColumns.length > 0) {
      console.warn(`‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫–æ–ª–æ–Ω–∫–∏: ${missingColumns.join(', ')}`);
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–ò–°–ü–†–ê–í–õ–ï–ù–û –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê)
   */
  processData(data) {
    const processedData = {
      reviews: [],
      commentsTop20: [],
      activeDiscussions: [],
      statistics: {
        totalReviews: 0,
        totalCommentsTop20: 0,
        totalActiveDiscussions: 0,
        totalViews: 0,
        platforms: new Set()
      }
    };
    
    let processedRows = 0;
    let skippedRows = 0;
    let debugSkip = 0;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥
    const columnMapping = this.getColumnMapping();
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –∏—Ö –≥—Ä–∞–Ω–∏—Ü
    let currentSection = null;
    let sectionStartRow = -1;
    let sectionEndRow = -1;
    
    // –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã –∏ –∏—Ö –≥—Ä–∞–Ω–∏—Ü—ã
    const sections = this.findSectionBoundaries(data);
    console.log('üìÇ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:', sections);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª –æ—Ç–¥–µ–ª—å–Ω–æ
    for (const section of sections) {
      currentSection = section.type;
      console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ "${section.name}" (—Å—Ç—Ä–æ–∫–∏ ${section.startRow + 1}-${section.endRow + 1})`);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑–¥–µ–ª–∞
      for (let i = section.startRow; i <= section.endRow; i++) {
        const row = data[i];
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        if (this.isSectionHeader(row) || this.isEmptyRow(row)) {
          skippedRows++;
          continue;
        }
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if (this.isStatisticsRow(row)) {
          skippedRows++;
          continue;
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        const record = this.processRow(row, currentSection, columnMapping);
        if (record) {
          if (currentSection === 'reviews') {
            processedData.reviews.push(record);
            processedData.statistics.totalReviews++;
          } else if (currentSection === 'commentsTop20') {
            processedData.commentsTop20.push(record);
            processedData.statistics.totalCommentsTop20++;
          } else if (currentSection === 'activeDiscussions') {
            processedData.activeDiscussions.push(record);
            processedData.statistics.totalActiveDiscussions++;
          }
          processedData.statistics.totalViews += record.views || 0;
          if (record.platform) {
            processedData.statistics.platforms.add(record.platform);
          }
          processedRows++;
        } else {
          if (debugSkip < 10) {
            console.log(`[SKIP] processRow –≤–µ—Ä–Ω—É–ª null –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ${i + 1}:`, row);
            debugSkip++;
          }
          skippedRows++;
        }
      }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.stats.reviewsCount = processedData.statistics.totalReviews;
    this.stats.commentsTop20Count = processedData.statistics.totalCommentsTop20;
    this.stats.activeDiscussionsCount = processedData.statistics.totalActiveDiscussions;
    this.stats.totalViews = processedData.statistics.totalViews;
    
    console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processedRows} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedRows} —Å—Ç—Ä–æ–∫`);
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${processedData.statistics.totalReviews} –æ—Ç–∑—ã–≤–æ–≤, ${processedData.statistics.totalCommentsTop20} —Ç–æ–ø-20, ${processedData.statistics.totalActiveDiscussions} –æ–±—Å—É–∂–¥–µ–Ω–∏–π`);
    
    return processedData;
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û –ù–ê –û–°–ù–û–í–ï –†–ï–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•)
   */
  detectContentType(row) {
    if (row.length === 0) return null;
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—â–µ–º —Ç–∏–ø –≤ –∫–æ–ª–æ–Ω–∫–µ "–¢–∏–ø –ø–æ—Å—Ç–∞" (–∏–Ω–¥–µ–∫—Å 13)
    const postTypeIndex = 13; // –ö–æ–ª–æ–Ω–∫–∞ N - "–¢–∏–ø –ø–æ—Å—Ç–∞" (–∏–Ω–¥–µ–∫—Å 13)
    let postType = '';
    
    if (row.length > postTypeIndex) {
      postType = String(row[postTypeIndex] || '').toLowerCase().trim();
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–ª–æ–Ω–∫–µ "–¢–∏–ø –ø–æ—Å—Ç–∞", –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–æ–ª–æ–Ω–∫—É
    if (!postType) {
      const lastColumnIndex = row.length - 1;
      postType = String(row[lastColumnIndex] || '').toLowerCase().trim();
    }
    
    // –£–¥–∞–ª—è–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –ª–æ–≥–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—à–∏–±–æ–∫)
    if (postType) {
      if (CONFIG.CONTENT_TYPES.REVIEWS.some(type => postType.includes(type))) {
        return 'reviews';
      }
      if (CONFIG.CONTENT_TYPES.TARGETED.some(type => postType.includes(type))) {
        return 'targeted';
      }
      if (CONFIG.CONTENT_TYPES.SOCIAL.some(type => postType.includes(type))) {
        return 'social';
      }
    }
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É (–µ—Å–ª–∏ —Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω)
    const columnMapping = this.getColumnMapping();
    const textIndex = columnMapping.text; // –ö–æ–ª–æ–Ω–∫–∞ E - "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è" (–∏–Ω–¥–µ–∫—Å 4)
    if (textIndex !== undefined && row[textIndex]) {
      const text = String(row[textIndex]).toLowerCase();
      if (text.includes('–æ—Ç–∑—ã–≤') || text.includes('review')) {
        return 'reviews';
      }
      if (text.includes('—Ü–µ–ª–µ–≤–æ–π') || text.includes('target')) {
        return 'targeted';
      }
      if (text.includes('—Å–æ—Ü–∏–∞–ª—å–Ω') || text.includes('social')) {
        return 'social';
      }
    }
    
    // –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–¥–∫–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    // console.log(`‚ùå –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–ª—è —Å—Ç—Ä–æ–∫–∏`);
    return null;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
   */
  isEmptyRow(row) {
    return !row || row.every(cell => !cell || String(cell).trim() === '');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  isDataRow(row) {
    if (row.length < 5) return false; // –ú–∏–Ω–∏–º—É–º 5 –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏-–∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–π
    const firstCell = String(row[0] || '').toLowerCase().trim();
    if (firstCell === '–æ—Ç–∑—ã–≤—ã' || firstCell === '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏' || firstCell === '–æ–±—Å—É–∂–¥–µ–Ω–∏—è') {
      console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏: "${firstCell}"`);
      return false;
    }
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º columnMapping –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –º–µ—Ç–æ–¥–∞
    const columnMapping = this.getColumnMapping();
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–Ω–∞—á–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–ª–æ–Ω–∫–µ E (–∏–Ω–¥–µ–∫—Å 4) - "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è"
    const textIndex = columnMapping.text; // –ö–æ–ª–æ–Ω–∫–∞ E - "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è" (–∏–Ω–¥–µ–∫—Å 4)
    const text = row[textIndex];
    
    if (text && String(text).trim().length > 10) {
      return true;
    }
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–ª–∏—á–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –¥–∞—Ç—ã
    const platformIndex = columnMapping.platform; // –ö–æ–ª–æ–Ω–∫–∞ B - "–ü–ª–æ—â–∞–¥–∫–∞" (–∏–Ω–¥–µ–∫—Å 1)
    const dateIndex = columnMapping.date; // –ö–æ–ª–æ–Ω–∫–∞ G - "–î–∞—Ç–∞" (–∏–Ω–¥–µ–∫—Å 6)
    
    const hasPlatform = row[platformIndex] && String(row[platformIndex]).trim().length > 0;
    const hasDate = row[dateIndex] && String(row[dateIndex]).trim().length > 0;
    
    return hasPlatform && hasDate;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  processRow(row, currentSection, columnMapping) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
      if (!row || row.length === 0) {
        return null;
      }

      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–æ–ª–µ–µ –≥–∏–±–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
      const textIndex = columnMapping.text;
      const platformIndex = columnMapping.platform;
      const dateIndex = columnMapping.date;
      
      const text = row[textIndex] ? String(row[textIndex]).trim() : '';
      const platform = row[platformIndex] ? String(row[platformIndex]).trim() : '';
      const date = row[dateIndex] ? String(row[dateIndex]).trim() : '';
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∏–∑: —Ç–µ–∫—Å—Ç–∞, –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –¥–∞—Ç—ã –∏–ª–∏ —Å—Å—ã–ª–∫–∏
      const hasText = text.length > 5;
      const hasPlatform = platform.length > 0;
      const hasDate = date.length > 0;
      const hasLink = row.some(cell => String(cell).includes('http'));
      
      if (!hasText && !hasPlatform && !hasDate && !hasLink) {
        return null;
      }

      // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –º–∞–ø–ø–∏–Ω–≥—É
      const extractedPlatform = this.extractPlatform(row, columnMapping);
      const theme = this.extractTheme(row, columnMapping);
      const textContent = this.extractText(row, columnMapping);
      const extractedDate = this.extractDate(row, columnMapping);
      const author = this.extractAuthor(row, columnMapping);
      const views = this.extractViews(row, columnMapping);
      const engagement = this.extractEngagement(row, columnMapping);
      const postType = this.extractPostType(row, columnMapping);
      const link = this.extractLink(row, columnMapping);

      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ –∏ –¥–∞–Ω–Ω—ã—Ö
      const type = this.determinePostTypeBySection(row, textContent, postType, currentSection, columnMapping);

      return {
        platform: extractedPlatform,
        theme,
        text: textContent,
        date: extractedDate,
        author,
        views,
        engagement,
        type,
        link,
        section: currentSection
      };
    } catch (error) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏: [${error}]`);
      return null;
    }
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  determinePostTypeBySection(row, text, postType, currentSection, columnMapping) {
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞
    if (currentSection === 'reviews') {
      return '–û–°'; // –û—Ç–∑—ã–≤—ã —Å–∞–π—Ç–æ–≤
    } else if (currentSection === 'commentsTop20') {
      return '–¶–°'; // –¶–µ–ª–µ–≤—ã–µ —Å–∞–π—Ç—ã
    } else if (currentSection === 'activeDiscussions') {
      return '–ü–°'; // –ü–ª–æ—â–∞–¥–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ
    }
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∫–æ–ª–æ–Ω–∫–µ "–¢–∏–ø –ø–æ—Å—Ç–∞"
    const postTypeIndex = columnMapping.postType;
    if (postTypeIndex !== undefined && row[postTypeIndex]) {
      const type = String(row[postTypeIndex]).trim().toLowerCase();
      if (type === '–æ—Å' || type === '–æ.—Å.') {
        return '–û–°';
      } else if (type === '—Ü—Å' || type === '—Ü.—Å.') {
        return '–¶–°';
      } else if (type === '–ø—Å' || type === '–ø.—Å.') {
        return '–ü–°';
      }
    }

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É
    if (text) {
      const lowerText = text.toLowerCase();
      if (lowerText.includes('–æ—Ç–∑—ã–≤') || lowerText.includes('—Ä–µ–∫–æ–º–µ–Ω–¥—É—é') || lowerText.includes('–ø–æ–∫—É–ø–∞–ª–∞')) {
        return '–û–°';
      } else if (lowerText.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π') || lowerText.includes('–æ—Ç–≤–µ—Ç') || lowerText.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏–µ')) {
        return '–¶–°';
      } else if (lowerText.includes('—Å–æ—Ü–∏–∞–ª—å–Ω') || lowerText.includes('—Ñ–æ—Ä—É–º') || lowerText.includes('—Å–æ–æ–±—â–µ—Å—Ç–≤–æ')) {
        return '–ü–°';
      }
    }

    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞
    return currentSection === 'reviews' ? '–û–°' : '–¶–°';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractPlatform(row, columnMapping) {
    const index = columnMapping.platform;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractText(row, columnMapping) {
    const index = columnMapping.text;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractDate(row, columnMapping) {
    const index = columnMapping.date;
    if (index !== undefined && row[index]) {
      const dateValue = row[index];
      
      if (dateValue instanceof Date) {
        return Utilities.formatDate(dateValue, Session.getScriptTimeZone(), CONFIG.FORMATTING.DATE_FORMAT);
      }
      
      return String(dateValue);
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractAuthor(row, columnMapping) {
    const index = columnMapping.author;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractViews(row, columnMapping) {
    const index = columnMapping.views;
    if (index !== undefined && row[index]) {
      const viewsValue = row[index];
      
      if (typeof viewsValue === 'number') {
        return viewsValue;
      }
      
      const parsed = parseInt(String(viewsValue).replace(/\D/g, ''));
      return isNaN(parsed) ? 0 : parsed;
    }
    return 0;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractEngagement(row, columnMapping) {
    const index = columnMapping.engagement;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  extractPostType(row, columnMapping) {
    const index = columnMapping.postType;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   */
  determinePostType(row, text, postType, columnMapping) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–æ–Ω–∫—É "–¢–∏–ø –ø–æ—Å—Ç–∞" (–∫–æ–ª–æ–Ω–∫–∞ N - –∏–Ω–¥–µ–∫—Å 13)
    const postTypeIndex = columnMapping.postType;
    if (postTypeIndex !== undefined && row[postTypeIndex]) {
      const type = String(row[postTypeIndex]).trim().toLowerCase();
      if (type === '–æ—Å' || type === '–æ.—Å.') {
        return '–û–°';
      } else if (type === '—Ü—Å' || type === '—Ü.—Å.') {
        return '–¶–°';
      }
    }

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É (–µ—Å–ª–∏ —Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω)
    const textIndex = columnMapping.text; // –ö–æ–ª–æ–Ω–∫–∞ E - "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è" (–∏–Ω–¥–µ–∫—Å 4)
    if (textIndex !== undefined && row[textIndex]) {
      const text = String(row[textIndex]).toLowerCase();
      if (text.includes('–æ—Ç–∑—ã–≤') || text.includes('—Ä–µ–∫–æ–º–µ–Ω–¥—É—é') || text.includes('–ø–æ–∫—É–ø–∞–ª–∞')) {
        return '–û–°';
      } else if (text.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π') || text.includes('–æ—Ç–≤–µ—Ç') || text.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏–µ')) {
        return '–¶–°';
      }
    }

    return '–û–°'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–º—ã
   */
  extractTheme(row, columnMapping) {
    const index = columnMapping.theme;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
   */
  extractLink(row, columnMapping) {
    const index = columnMapping.link;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–û)
   * @param {Object} processedData - –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   */
  createReport(processedData) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ª–∏—Å—Ç —Å –Ω—É–∂–Ω—ã–º –∏–º–µ–Ω–µ–º
    const tempSpreadsheet = SpreadsheetApp.create(`temp_google_sheets_${Date.now()}_${this.monthInfo.name}_${this.monthInfo.year}_—Ä–µ–∑—É–ª—å—Ç–∞—Ç`);
    const reportSheetName = `${this.monthInfo.name}_${this.monthInfo.year}`;
    const sheet = tempSpreadsheet.getActiveSheet();
    sheet.setName(reportSheetName);
    
    // –®–∞–ø–∫–∞: –ü—Ä–æ–¥—É–∫—Ç, –ü–µ—Ä–∏–æ–¥, –ü–ª–∞–Ω
    sheet.getRange('A1').setValue('–ü—Ä–æ–¥—É–∫—Ç');
    sheet.getRange('B1').setValue('–ê–∫—Ä–∏—Ö–∏–Ω - –§–æ—Ä—Ç–µ–¥–µ—Ç—Ä–∏–º');
    sheet.getRange('A2').setValue('–ü–µ—Ä–∏–æ–¥');
    sheet.getRange('B2').setValue(`${this.monthInfo.name}-25`);
    sheet.getRange('A3').setValue('–ü–ª–∞–Ω');
    
    // 2. –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    const tableHeaders = ['–ü–ª–æ—â–∞–¥–∫–∞', '–¢–µ–º–∞', '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '–î–∞—Ç–∞', '–ù–∏–∫', '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã', '–í–æ–≤–ª–µ—á–µ–Ω–∏–µ', '–¢–∏–ø –ø–æ—Å—Ç–∞'];
    let row = 5;
    sheet.getRange(row, 1, 1, tableHeaders.length).setValues([tableHeaders]);
    sheet.getRange(row, 1, 1, tableHeaders.length).setFontWeight('bold').setBackground('#3f2355').setFontColor('white');
    row++;
    
    // 3. –†–∞–∑–¥–µ–ª—ã –∏ –¥–∞–Ω–Ω—ã–µ
    function writeSection(sectionName, dataArr) {
      sheet.getRange(row, 1).setValue(sectionName);
      sheet.getRange(row, 1, 1, tableHeaders.length).setBackground('#b7a6c9').setFontWeight('bold');
      row++;
      if (dataArr.length) {
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞
        const safeData = dataArr.map(r => {
          const arr = [r.platform, r.theme, r.text, r.date, r.author, r.views, r.engagement, r.type];
          while (arr.length < tableHeaders.length) arr.push('');
          return arr.slice(0, tableHeaders.length);
        });
        sheet.getRange(row, 1, safeData.length, tableHeaders.length).setValues(safeData);
        row += safeData.length;
      }
      console.log(`üìÇ –†–∞–∑–¥–µ–ª "${sectionName}": ${dataArr.length} —Å—Ç—Ä–æ–∫`);
    }
    
    writeSection('–û—Ç–∑—ã–≤—ã', processedData.reviews);
    writeSection('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20 –≤—ã–¥–∞—á–∏', processedData.commentsTop20);
    writeSection('–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)', processedData.activeDiscussions);
    
    // 4. –ë–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–Ω–∏–∑—É
    row += 2;
    sheet.getRange(row, 1).setValue('–°—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤');
    sheet.getRange(row, 2).setValue(this.stats.totalViews);
    row++;
    sheet.getRange(row, 1).setValue('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞ (–æ—Ç–∑—ã–≤—ã)');
    sheet.getRange(row, 2).setValue(processedData.reviews.length);
    row++;
    sheet.getRange(row, 1).setValue('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π (—Ñ–æ—Ä—É–º—ã, —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å—Ç–∞—Ç—å—è–º)');
    sheet.getRange(row, 2).setValue(processedData.activeDiscussions.length);
    row++;
    sheet.getRange(row, 1).setValue('–î–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π —Å –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ–º –≤ –¥–∏–∞–ª–æ–≥');
    sheet.getRange(row, 2).setValue(this.stats.engagementShare || 0);
    sheet.getRange(row - 3, 1, 4, 2).setFontWeight('bold');
    
    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
    sheet.autoResizeColumns(1, tableHeaders.length);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    const dataRange = sheet.getDataRange();
    sheet.getRange(1, 1, dataRange.getNumRows(), dataRange.getNumColumns()).createFilter();
    
    console.log(`üìÑ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${reportSheetName}`);
    return tempSpreadsheet.getUrl();
  }

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
   */
  extractMonthFromText(text) {
    const lowerText = text.toLowerCase();
    
    const months = [
      { name: '–Ø–Ω–≤–∞—Ä—å', short: '–Ø–Ω–≤', number: 1 },
      { name: '–§–µ–≤—Ä–∞–ª—å', short: '–§–µ–≤', number: 2 },
      { name: '–ú–∞—Ä—Ç', short: '–ú–∞—Ä', number: 3 },
      { name: '–ê–ø—Ä–µ–ª—å', short: '–ê–ø—Ä', number: 4 },
      { name: '–ú–∞–π', short: '–ú–∞–π', number: 5 },
      { name: '–ò—é–Ω—å', short: '–ò—é–Ω', number: 6 },
      { name: '–ò—é–ª—å', short: '–ò—é–ª', number: 7 },
      { name: '–ê–≤–≥—É—Å—Ç', short: '–ê–≤–≥', number: 8 },
      { name: '–°–µ–Ω—Ç—è–±—Ä—å', short: '–°–µ–Ω', number: 9 },
      { name: '–û–∫—Ç—è–±—Ä—å', short: '–û–∫—Ç', number: 10 },
      { name: '–ù–æ—è–±—Ä—å', short: '–ù–æ—è', number: 11 },
      { name: '–î–µ–∫–∞–±—Ä—å', short: '–î–µ–∫', number: 12 }
    ];
    
    // –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º —Ç–æ—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    for (const month of months) {
      // –¢–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
      const exactMatches = [
        month.name.toLowerCase(),
        month.short.toLowerCase(),
        `${month.short}25`,
        `${month.name}25`,
        `${month.short}2025`,
        `${month.name}2025`
      ];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      for (const exactMatch of exactMatches) {
        if (lowerText === exactMatch || lowerText.includes(exactMatch)) {
          return {
            name: month.name,
            short: month.short,
            number: month.number,
            year: 2025
          };
        }
      }
    }
    
    return null;
  }

  getMonthName(monthIndex) {
    const months = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
                   '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'];
    return months[monthIndex];
  }

  getMonthShort(monthIndex) {
    const months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω',
                   '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫'];
    return months[monthIndex];
  }

  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≤—Å–µ—Ö –º–µ—Å—è—Ü–µ–≤
  getColumnMapping() {
    return {
      platform: 1,
      theme: 3,
      text: 4,
      date: 6,
      author: 7,
      views: 11,
      engagement: 12,
      postType: 13,
      link: 2
    };
  }

  /**
   * –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–∏—Å–∫ –≥—Ä–∞–Ω–∏—Ü —Ä–∞–∑–¥–µ–ª–æ–≤ (–£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
   */
  findSectionBoundaries(data) {
    const sections = [];
    let currentSection = null;
    let sectionStart = -1;
    
    for (let i = CONFIG.STRUCTURE.dataStartRow - 1; i < data.length; i++) {
      const row = data[i];
      const firstCell = String(row[0] || '').toLowerCase().trim();
      
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      if (this.isStatisticsRow(row)) {
        continue;
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–∞–∑–¥–µ–ª–∞
      let sectionType = null;
      let sectionName = '';
      
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤
      if (firstCell === '–æ—Ç–∑—ã–≤—ã' || (firstCell.includes('–æ—Ç–∑—ã–≤—ã') && !firstCell.includes('—Ç–æ–ø-20') && !firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è') && !firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'))) {
        sectionType = 'reviews';
        sectionName = '–û—Ç–∑—ã–≤—ã';
      } else if (firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ø-20') || firstCell.includes('—Ç–æ–ø-20 –≤—ã–¥–∞—á–∏')) {
        sectionType = 'commentsTop20';
        sectionName = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20';
      } else if (firstCell.includes('–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è') || firstCell.includes('–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')) {
        sectionType = 'activeDiscussions';
        sectionName = '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è';
      }
      
      // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
      if (sectionType && sectionType !== currentSection) {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª
        if (currentSection && sectionStart !== -1) {
          // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ü–∞ —Ä–∞–∑–¥–µ–ª–∞
          let endRow = i - 1;
          
          // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–∏—Å–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏)
          for (let j = i - 1; j >= sectionStart; j--) {
            const checkRow = data[j];
            if (!this.isStatisticsRow(checkRow) && !this.isEmptyRow(checkRow)) {
              endRow = j;
              break;
            }
          }
          
          sections.push({
            type: currentSection,
            name: this.getSectionName(currentSection),
            startRow: sectionStart,
            endRow: endRow
          });
        }
        
        // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
        currentSection = sectionType;
        sectionStart = i + 1; // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏—Å–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
        console.log(`üìÇ –ù–∞–π–¥–µ–Ω —Ä–∞–∑–¥–µ–ª "${sectionName}" –≤ —Å—Ç—Ä–æ–∫–µ ${i + 1}`);
      }
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑–¥–µ–ª
    if (currentSection && sectionStart !== -1) {
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ü–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
      let endRow = data.length - 1;
      
      // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–∏—Å–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É)
      for (let j = data.length - 1; j >= sectionStart; j--) {
        const checkRow = data[j];
        if (!this.isStatisticsRow(checkRow) && !this.isEmptyRow(checkRow)) {
          endRow = j;
          break;
        }
      }
      
      sections.push({
        type: currentSection,
        name: this.getSectionName(currentSection),
        startRow: sectionStart,
        endRow: endRow
      });
    }
    
    return sections;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞
   */
  getSectionName(sectionType) {
    const names = {
      'reviews': '–û—Ç–∑—ã–≤—ã',
      'commentsTop20': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20',
      'activeDiscussions': '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è'
    };
    return names[sectionType] || sectionType;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
   */
  isSectionHeader(row) {
    if (!row || row.length === 0) return false;
    
    const firstCell = String(row[0] || '').toLowerCase().trim();
    return firstCell.includes('–æ—Ç–∑—ã–≤—ã') || 
           firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏') || 
           firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è') ||
           firstCell.includes('—Ç–æ–ø-20') ||
           firstCell.includes('–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
   */
  isStatisticsRow(row) {
    if (!row || row.length === 0) return false;
    
    const firstCell = String(row[0] || '').toLowerCase().trim();
    return firstCell.includes('—Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤') || 
           firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞') ||
           firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
           firstCell.includes('–¥–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
           firstCell.includes('–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π') ||
           firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—á—Ç–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è');
  }
}

// ==================== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 */
function processMonthlyReport(spreadsheetId = null, sheetName = null) {
  const processor = new FinalMonthlyReportProcessor();
  
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
  }
  
  return processor.processReport(spreadsheetId, sheetName);
}

/**
 * –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ª–∏—Å—Ç–∞
 */
function quickProcess() {
  return processMonthlyReport();
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤—ã–±–æ—Ä–æ–º –ª–∏—Å—Ç–∞
 */
function processWithSheetSelection() {
  const ui = SpreadsheetApp.getUi();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  
  const sheetNames = sheets.map(sheet => sheet.getName());
  const response = ui.prompt(
    '–í—ã–±–æ—Ä –ª–∏—Å—Ç–∞',
    `–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã:\n${sheetNames.join('\n')}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:`,
    ui.ButtonSet.OK_CANCEL
  );
  
  if (response.getSelectedButton() === ui.Button.OK) {
    const selectedSheet = response.getResponseText().trim();
    return processMonthlyReport(spreadsheet.getId(), selectedSheet);
  }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
 */
function updateMenu() {
  const ui = SpreadsheetApp.getUi();
  ui.createMenu('üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ (–§–ò–ù–ê–õ–¨–ù–ê–Ø)')
    .addItem('–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞', 'quickProcess')
    .addItem('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤—ã–±–æ—Ä–æ–º –ª–∏—Å—Ç–∞', 'processWithSheetSelection')
    .addSeparator()
    .addItem('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'showSettings')
    .addToUi();
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */
function showSettings() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ (–û–°–ù–û–í–ê–ù–´ –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)',
    `–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:\n` +
    `- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ: ${CONFIG.STRUCTURE.headerRow}\n` +
    `- –î–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏: ${CONFIG.STRUCTURE.dataStartRow}\n` +
    `- –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: —Å—Ç—Ä–æ–∫–∏ ${CONFIG.STRUCTURE.infoRows.join(', ')}\n` +
    `- –ú–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–æ–∫: ${CONFIG.STRUCTURE.maxRows}\n` +
    `- –û—Ç–ª–∞–¥–∫–∞: ${CONFIG.TESTING.ENABLE_DEBUG ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞'}`,
    ui.ButtonSet.OK
  );
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
 */
function onOpen() {
  updateMenu();
} 