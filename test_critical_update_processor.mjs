import { ExcelProcessorImprovedV2 } from './server/services/excel-processor-improved-v2.ts';
import fs from 'fs';
import path from 'path';

console.log('üî• –¢–ï–°–¢: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä V2');
console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ 4, –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏ 5');
console.log('üéØ –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ~13 –æ—Ç–∑—ã–≤–æ–≤, ~15 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, ~42 –æ–±—Å—É–∂–¥–µ–Ω–∏—è\n');

async function testCriticalUpdateProcessor() {
  try {
    const processor = new ExcelProcessorImprovedV2();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const sourceFile = 'source_structure_analysis.xlsx';
    
    if (!fs.existsSync(sourceFile)) {
      console.log(`‚ùå –§–∞–π–ª ${sourceFile} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
      return;
    }
    
    console.log(`üìÇ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª: ${sourceFile}`);
    console.log(`üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${(fs.statSync(sourceFile).size / 1024 / 1024).toFixed(2)} MB\n`);
    
    const startTime = Date.now();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
    const result = await processor.processExcelFile(sourceFile);
    
    const processingTime = Date.now() - startTime;
    
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ì–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø:');
    console.log(`üìÑ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: ${result.outputPath}`);
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${processingTime}ms`);
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`   üìù –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${result.statistics.totalRows}`);
    console.log(`   ‚≠ê –û—Ç–∑—ã–≤–æ–≤: ${result.statistics.reviewsCount} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ~13)`);
    console.log(`   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${result.statistics.commentsCount} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ~15)`);
    console.log(`   üî• –ê–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏–π: ${result.statistics.activeDiscussionsCount} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ~42)`);
    console.log(`   üëÄ –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${result.statistics.totalViews.toLocaleString()}`);
    console.log(`   üìà –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: ${result.statistics.engagementRate.toFixed(2)}%`);
    console.log(`   üèÜ –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: ${result.statistics.qualityScore.toFixed(1)}/10`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è–º
    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –û–ñ–ò–î–ê–ù–ò–Ø–ú:');
    
    const reviewsMatch = Math.abs(result.statistics.reviewsCount - 13) <= 3;
    const commentsMatch = Math.abs(result.statistics.commentsCount - 15) <= 5;
    const discussionsMatch = Math.abs(result.statistics.activeDiscussionsCount - 42) <= 10;
    
    console.log(`   ‚≠ê –û—Ç–∑—ã–≤—ã: ${reviewsMatch ? '‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢' : '‚ùå –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢'} (${result.statistics.reviewsCount} vs ~13)`);
    console.log(`   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${commentsMatch ? '‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢' : '‚ùå –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢'} (${result.statistics.commentsCount} vs ~15)`);
    console.log(`   üî• –û–±—Å—É–∂–¥–µ–Ω–∏—è: ${discussionsMatch ? '‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢' : '‚ùå –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢'} (${result.statistics.activeDiscussionsCount} vs ~42)`);
    
    const overallMatch = reviewsMatch && commentsMatch && discussionsMatch;
    console.log(`\nüéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${overallMatch ? '‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!' : '‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê'}`);
    
    if (fs.existsSync(result.outputPath)) {
      console.log(`\nüìÑ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${result.outputPath}`);
      console.log(`üìä –†–∞–∑–º–µ—Ä –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: ${(fs.statSync(result.outputPath).size / 1024).toFixed(2)} KB`);
    }
    
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò:', error);
    console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testCriticalUpdateProcessor();