const XLSX = require('xlsx');
const fs = require('fs');

console.log('üîç –ü–†–Ø–ú–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø –î–ê–ù–ù–´–•');
console.log('========================================');

try {
  // –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
  const buffer = fs.readFileSync('uploads/Fortedetrim ORM report source.xlsx');
  const workbook = XLSX.read(buffer, { type: 'buffer' });
  const sheetName = workbook.SheetNames[0];
  const worksheet = workbook.Sheets[sheetName];
  const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, defval: '' });
  
  console.log('üìã –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö:');
  console.log('–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:', jsonData.length);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
  const allData = [];
  let reviewsCount = 0;
  let commentsCount = 0;
  
  for (let i = 0; i < jsonData.length; i++) {
    const row = jsonData[i];
    if (!row || !Array.isArray(row)) continue;

    const —Ç–∏–ø–†–∞–∑–º–µ—â–µ–Ω–∏—è = row[0] ? row[0].toString().trim() : '';
    
    if (—Ç–∏–ø–†–∞–∑–º–µ—â–µ–Ω–∏—è.toLowerCase().includes('–æ—Ç–∑—ã–≤')) {
      // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
      const –ø–ª–æ—â–∞–¥–∫–∞ = row[1] ? row[1].toString().trim() : '';
      const –ø—Ä–æ–¥—É–∫—Ç = row[2] ? row[2].toString().trim() : '';
      const —Ç–µ–∫—Å—Ç = row[4] ? row[4].toString().trim() : '';
      const –¥–∞—Ç–∞ = row[6] || '';
      const –Ω–∏–∫ = row[7] ? row[7].toString().trim() : '';
      
      // –î–ª—è –æ—Ç–∑—ã–≤–æ–≤ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –≤ –∫–æ–ª–æ–Ω–∫–µ 6 (–¥–∞—Ç–∞ –∫–∞–∫ —á–∏—Å–ª–æ Excel)
      const –ø—Ä–æ—Å–º–æ—Ç—Ä—ã = typeof row[6] === 'number' ? row[6] : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
      
      if (–ø–ª–æ—â–∞–¥–∫–∞ || —Ç–µ–∫—Å—Ç) {
        allData.push({
          –ø–ª–æ—â–∞–¥–∫–∞,
          —Ç–µ–º–∞: –ø—Ä–æ–¥—É–∫—Ç,
          —Ç–µ–∫—Å—Ç: —Ç–µ–∫—Å—Ç.substring(0, 100) + '...',
          –¥–∞—Ç–∞,
          –Ω–∏–∫,
          –ø—Ä–æ—Å–º–æ—Ç—Ä—ã,
          –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
          —Ç–∏–ø–ü–æ—Å—Ç–∞: '–û—Ç–∑—ã–≤—ã'
        });
        reviewsCount++;
      }
    } else if (—Ç–∏–ø–†–∞–∑–º–µ—â–µ–Ω–∏—è.toLowerCase().includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏')) {
      // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
      const –ø–ª–æ—â–∞–¥–∫–∞ = row[1] ? row[1].toString().trim() : '';
      const –ø—Ä–æ–¥—É–∫—Ç = row[2] ? row[2].toString().trim() : '';
      const —Ç–µ–∫—Å—Ç = row[4] ? row[4].toString().trim() : '';
      const –¥–∞—Ç–∞ = row[6] || '';
      const –Ω–∏–∫ = row[7] ? row[7].toString().trim() : '';
      const –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤–ü–æ–ª—É—á–µ–Ω–æ = typeof row[11] === 'number' ? row[11] : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
      const –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ = row[12] ? row[12].toString().trim() : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
      
      if (–ø–ª–æ—â–∞–¥–∫–∞ || —Ç–µ–∫—Å—Ç) {
        allData.push({
          –ø–ª–æ—â–∞–¥–∫–∞,
          —Ç–µ–º–∞: –ø—Ä–æ–¥—É–∫—Ç,
          —Ç–µ–∫—Å—Ç: —Ç–µ–∫—Å—Ç.substring(0, 100) + '...',
          –¥–∞—Ç–∞,
          –Ω–∏–∫,
          –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤–ü–æ–ª—É—á–µ–Ω–æ,
          –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ,
          —Ç–∏–ø–ü–æ—Å—Ç–∞: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20 –≤—ã–¥–∞—á–∏'
        });
        commentsCount++;
      }
    }
  }
  
  console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log('–í—Å–µ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ —Å—Ç—Ä–æ–∫:', allData.length);
  console.log('–û—Ç–∑—ã–≤—ã:', reviewsCount);
  console.log('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:', commentsCount);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
  console.log('\nüìù –ü–†–ò–ú–ï–†–´ –û–¢–ó–´–í–û–í:');
  const reviews = allData.filter(item => item.—Ç–∏–ø–ü–æ—Å—Ç–∞ === '–û—Ç–∑—ã–≤—ã');
  reviews.slice(0, 5).forEach((item, index) => {
    console.log(`${index + 1}. ${item.–ø–ª–æ—â–∞–¥–∫–∞} | –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${item.–ø—Ä–æ—Å–º–æ—Ç—Ä—ã} | –ù–∏–∫: ${item.–Ω–∏–∫}`);
  });
  
  console.log('\nüí¨ –ü–†–ò–ú–ï–†–´ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í:');
  const comments = allData.filter(item => item.—Ç–∏–ø–ü–æ—Å—Ç–∞ === '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20 –≤—ã–¥–∞—á–∏');
  comments.slice(0, 5).forEach((item, index) => {
    console.log(`${index + 1}. ${item.–ø–ª–æ—â–∞–¥–∫–∞} | –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${item.–ø—Ä–æ—Å–º–æ—Ç—Ä—ã} | –í–æ–≤–ª–µ—á–µ–Ω–∏–µ: ${item.–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ}`);
  });
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ
  console.log('\nüîç –ê–ù–ê–õ–ò–ó –í–û–í–õ–ï–ß–ï–ù–ò–Ø:');
  const commentsWithEngagement = comments.filter(item => 
    item.–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ && 
    item.–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ !== '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' && 
    item.–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ.trim() !== ''
  );
  console.log('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ–º:', commentsWithEngagement.length);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –≤–æ–≤–ª–µ—á–µ–Ω–∏—è
  console.log('\nüìà –ü–†–ò–ú–ï–†–´ –í–û–í–õ–ï–ß–ï–ù–ò–Ø:');
  commentsWithEngagement.slice(0, 10).forEach((item, index) => {
    console.log(`${index + 1}. –í–æ–≤–ª–µ—á–µ–Ω–∏–µ: "${item.–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ}" | –ü–ª–æ—â–∞–¥–∫–∞: ${item.–ø–ª–æ—â–∞–¥–∫–∞.substring(0, 50)}`);
  });
  
  // –°—á–∏—Ç–∞–µ–º —Å—É–º–º—ã
  const totalViews = allData.reduce((sum, item) => {
    return sum + (typeof item.–ø—Ä–æ—Å–º–æ—Ç—Ä—ã === 'number' ? item.–ø—Ä–æ—Å–º–æ—Ç—Ä—ã : 0);
  }, 0);
  
  console.log('\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
  console.log('–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤:', totalViews);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  console.log('\nüîç –°–¢–†–£–ö–¢–£–†–ê –°–¢–†–û–ö–ò –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø:');
  for (let i = 0; i < jsonData.length; i++) {
    const row = jsonData[i];
    if (row && row[0] && row[0].toString().toLowerCase().includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏')) {
      console.log(`–°—Ç—Ä–æ–∫–∞ ${i + 1}:`);
      for (let j = 0; j < Math.min(15, row.length); j++) {
        console.log(`  –ö–æ–ª–æ–Ω–∫–∞ ${j}: "${row[j]}"`);
      }
      break;
    }
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
} 