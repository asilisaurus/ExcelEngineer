const ExcelJS = require('exceljs');

// –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
function analyzeRowType(row) {
  if (!row || row.length === 0) return 'empty';
  
  const colA = (row[0] || '').toString().toLowerCase();
  const colB = (row[1] || '').toString().toLowerCase();
  const colD = (row[3] || '').toString().toLowerCase();
  const colE = (row[4] || '').toString().toLowerCase();
  const colN = (row[13] || '').toString().toLowerCase();
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  if (colA.includes('—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è') || colA.includes('–ø–ª–æ—â–∞–¥–∫–∞') || 
      colB.includes('–ø–ª–æ—â–∞–¥–∫–∞') || colE.includes('—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è') ||
      colA.includes('–ø–ª–∞–Ω') || colA.includes('–∏—Ç–æ–≥–æ') || colA.includes('–∫–ª—é—á–µ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è') ||
      colA.includes('—Ç–æ–ø-20 –≤—ã–¥–∞—á–∏') || colA === '–æ —Ç –∑ —ã –≤ —ã') {
    return 'header';
  }
  
  // Google Sheets —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞—è –ª–æ–≥–∏–∫–∞: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–æ–Ω–∫—É A –¥–ª—è —Ç–∏–ø–∞
  if (colA.includes('–æ—Ç–∑—ã–≤—ã (–æ—Ç–∑–æ–≤–∏–∫–∏)')) {
    return 'review_otzovik';
  }
  
  if (colA.includes('–æ—Ç–∑—ã–≤—ã (–∞–ø—Ç–µ–∫–∏)')) {
    return 'review_pharmacy';
  }
  
  if (colA.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö')) {
    return 'comment';
  }
  
  // –°–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞
  if (colA.includes('–æ—Ç–∑—ã–≤—ã') || colA.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏') || colA.includes('—Ç–æ–ø-20 –≤—ã–¥–∞—á–∏')) {
    return 'section_header';
  }
  
  // –ê–Ω–∞–ª–∏–∑ –ø–æ URL –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
  const urlText = colB + ' ' + colD;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∑—ã–≤—ã –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –æ—Ç–∑–æ–≤–∏–∫–æ–≤
  const reviewPlatforms = [
    'otzovik', 'irecommend', 'otzyvru', 'pravogolosa', 'medum', 
    'vseotzyvy', 'otzyvy.pro'
  ];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∑—ã–≤—ã –Ω–∞ –∞–ø—Ç–µ—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
  const pharmacyPlatforms = [
    'market.yandex', 'dialog.ru', 'goodapteka', 'megapteka', 
    'uteka', 'nfapteka', 'piluli.ru', 'eapteka.ru', 'pharmspravka.ru', 
    'gde.ru', 'ozon.ru'
  ];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
  const commentPlatforms = [
    'dzen.ru', 'woman.ru', 'forum.baby.ru', 'vk.com', 't.me',
    'ok.ru', 'otvet.mail.ru', 'babyblog.ru', 'mom.life', 
    'youtube.com', 'pikabu.ru', 'livejournal.com', 'facebook.com'
  ];
  
  const isReviewPlatform = reviewPlatforms.some(platform => 
    urlText.toLowerCase().includes(platform)
  );
  
  const isPharmacyPlatform = pharmacyPlatforms.some(platform => 
    urlText.toLowerCase().includes(platform)
  );
  
  const isCommentPlatform = commentPlatforms.some(platform => 
    urlText.toLowerCase().includes(platform)
  );
  
  // –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞ –≤ –∫–æ–ª–æ–Ω–∫–µ N
  const postType = colN;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Ç–∏–ø—É –ø–æ—Å—Ç–∞
  if ((colB || colD || colE) && (isReviewPlatform || (postType === '–æ—Å' && isReviewPlatform))) {
    return 'review_otzovik';
  }
  
  if ((colB || colD || colE) && (isPharmacyPlatform || (postType === '–æ—Å' && isPharmacyPlatform))) {
    return 'review_pharmacy';
  }
  
  if ((colB || colD || colE) && (isCommentPlatform || postType === '—Ü—Å')) {
    return 'comment';
  }
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –Ω–æ —Ç–∏–ø –Ω–µ—è—Å–µ–Ω
  if (colB || colD || colE) {
    return 'content';
  }
  
  return 'empty';
}

async function debugProcessingLogic() {
  try {
    console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –õ–û–ì–ò–ö–ò –û–ë–†–ê–ë–û–¢–ö–ò ===');
    
    const filePath = 'uploads/temp_google_sheets_1751807589999.xlsx';
    
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(filePath);
    const worksheet = workbook.worksheets[0];
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤
    const data = [];
    worksheet.eachRow((row, rowNumber) => {
      if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const rowData = [];
        row.eachCell((cell, colNumber) => {
          rowData[colNumber - 1] = cell.value;
        });
        data.push(rowData);
      }
    });
    
    console.log(`üìã –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö: ${data.length}`);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
    const typeCount = {};
    
    for (let i = 0; i < data.length; i++) {
      const row = data[i];
      const type = analyzeRowType(row);
      
      if (!typeCount[type]) {
        typeCount[type] = 0;
      }
      typeCount[type]++;
    }
    
    console.log('\\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø–æ —Ç–∏–ø–∞–º:');
    Object.entries(typeCount).forEach(([type, count]) => {
      console.log(`   üîπ ${type}: ${count}`);
    });
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã
    const relevantTypes = ['review_otzovik', 'review_pharmacy', 'comment'];
    const processedRows = [];
    
    for (let i = 0; i < data.length; i++) {
      const row = data[i];
      const type = analyzeRowType(row);
      
      if (relevantTypes.includes(type)) {
        processedRows.push({ type, row, index: i + 2 }); // +2 –¥–ª—è —É—á–µ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      }
    }
    
    console.log('\\nüéØ –ó–∞–ø–∏—Å–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
    console.log(`   üìù review_otzovik: ${processedRows.filter(r => r.type === 'review_otzovik').length}`);
    console.log(`   üìù review_pharmacy: ${processedRows.filter(r => r.type === 'review_pharmacy').length}`);
    console.log(`   üìù comment: ${processedRows.filter(r => r.type === 'comment').length}`);
    console.log(`   üìù –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${processedRows.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    const comments = processedRows.filter(r => r.type === 'comment').slice(0, 10);
    console.log('\\nüîç –ü–µ—Ä–≤—ã–µ 10 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:');
    comments.forEach((item, index) => {
      const text = (item.row[4] || '').toString();
      console.log(`   ${index + 1}. –°—Ç—Ä–æ–∫–∞ ${item.index}: ${text.substring(0, 100)}...`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

debugProcessingLogic(); 