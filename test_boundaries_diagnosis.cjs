/**
 * üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ì–†–ê–ù–ò–¶ –†–ê–ó–î–ï–õ–û–í
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –≥—Ä–∞–Ω–∏—Ü —Ä–∞–∑–¥–µ–ª–æ–≤
 */

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ì–†–ê–ù–ò–¶ –†–ê–ó–î–ï–õ–û–í');
console.log('===============================');

// –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–≥–∞
const mockData = [
  // –°—Ç—Ä–æ–∫–∏ 1-5: –∏–Ω—Ñ–æ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏
  ['', '', '', ''],
  ['', '', '', ''],
  ['', '', '', ''],
  ['–ü–ª–æ—â–∞–¥–∫–∞', '–°—Å—ã–ª–∫–∞', '–¢–µ–º–∞', '–¢–µ–∫—Å—Ç'],
  ['', '', '', ''],
  
  // –°—Ç—Ä–æ–∫–∞ 6: –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–û—Ç–∑—ã–≤—ã"
  ['–æ—Ç–∑—ã–≤—ã', '', '', ''],
  
  // –°—Ç—Ä–æ–∫–∏ 7-27: –¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤ (21 —Å—Ç—Ä–æ–∫–∞)
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞1', '—Å—Å—ã–ª–∫–∞1', '—Ç–µ–º–∞1', '—Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ 1'],
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞2', '—Å—Å—ã–ª–∫–∞2', '—Ç–µ–º–∞2', '—Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ 2'],
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞3', '—Å—Å—ã–ª–∫–∞3', '—Ç–µ–º–∞3', '—Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ 3'],
  // ... –µ—â–µ 18 —Å—Ç—Ä–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
  ...new Array(18).fill(['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '—Å—Å—ã–ª–∫–∞', '—Ç–µ–º–∞', '—Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞']),
  
  // –°—Ç—Ä–æ–∫–∞ 28: –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20"
  ['–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ø-20 –≤—ã–¥–∞—á–∏', '', '', ''],
  
  // –°—Ç—Ä–æ–∫–∏ 29-48: –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (20 —Å—Ç—Ä–æ–∫)
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞1', '—Å—Å—ã–ª–∫–∞1', '—Ç–µ–º–∞1', '—Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è 1'],
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞2', '—Å—Å—ã–ª–∫–∞2', '—Ç–µ–º–∞2', '—Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è 2'],
  // ... –µ—â–µ 18 —Å—Ç—Ä–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  ...new Array(18).fill(['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '—Å—Å—ã–ª–∫–∞', '—Ç–µ–º–∞', '—Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è']),
  
  // –°—Ç—Ä–æ–∫–∞ 49: –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è"
  ['–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)', '', '', ''],
  
  // –°—Ç—Ä–æ–∫–∏ 50-680: –¥–∞–Ω–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–π (631 —Å—Ç—Ä–æ–∫–∞)
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞1', '—Å—Å—ã–ª–∫–∞1', '—Ç–µ–º–∞1', '—Ç–µ–∫—Å—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è 1'],
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞2', '—Å—Å—ã–ª–∫–∞2', '—Ç–µ–º–∞2', '—Ç–µ–∫—Å—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è 2'],
  // ... –µ—â–µ 629 —Å—Ç—Ä–æ–∫ –æ–±—Å—É–∂–¥–µ–Ω–∏–π
  ...new Array(629).fill(['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '—Å—Å—ã–ª–∫–∞', '—Ç–µ–º–∞', '—Ç–µ–∫—Å—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è']),
  
  // –°—Ç—Ä–æ–∫–∏ 681-690: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  ['', '', '', ''],
  ['', '', '', ''],
  ['—Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤* 3333564', '', '', ''],
  ['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞ (–æ—Ç–∑—ã–≤—ã) 22', '', '', ''],
  ['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π (—Ñ–æ—Ä—É–º—ã, —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å—Ç–∞—Ç—å—è–º) 631', '', '', ''],
  ['–¥–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π —Å –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ–º –≤ –¥–∏–∞–ª–æ–≥ 0.20', '', '', ''],
  ['', '', '', ''],
  ['*–±–µ–∑ —É—á–µ—Ç–∞ –ø–ª–æ—â–∞–¥–æ–∫ —Å –∑–∞–∫—Ä—ã—Ç–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø—Ä–æ—á—Ç–µ–Ω–∏–π', '', '', ''],
  ['–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ 0.70', '', '', ''],
  ['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—á—Ç–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ 30%', '', '', ''],
];

console.log(`üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: ${mockData.length} —Å—Ç—Ä–æ–∫`);

// –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É findSectionBoundaries (–£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
function simulateFindSectionBoundaries(data) {
  console.log('\nüîç –°–ò–ú–£–õ–Ø–¶–ò–Ø findSectionBoundaries() - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø');
  
  const sections = [];
  let currentSection = null;
  let sectionStart = -1;
  
  const dataStartRow = 5; // CONFIG.STRUCTURE.dataStartRow - 1
  
  for (let i = dataStartRow - 1; i < data.length; i++) {
    const row = data[i];
    const firstCell = String(row[0] || '').toLowerCase().trim();
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if (isStatisticsRow(row)) {
      continue;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–∞–∑–¥–µ–ª–∞
    let sectionType = null;
    let sectionName = '';
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤
    if (firstCell === '–æ—Ç–∑—ã–≤—ã' || (firstCell.includes('–æ—Ç–∑—ã–≤—ã') && !firstCell.includes('—Ç–æ–ø-20') && !firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è') && !firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'))) {
      sectionType = 'reviews';
      sectionName = '–û—Ç–∑—ã–≤—ã';
    } else if (firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ø-20') || firstCell.includes('—Ç–æ–ø-20 –≤—ã–¥–∞—á–∏')) {
      sectionType = 'commentsTop20';
      sectionName = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20';
    } else if (firstCell.includes('–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è') || firstCell.includes('–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')) {
      sectionType = 'activeDiscussions';
      sectionName = '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è';
    }
    
    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    if (sectionType && sectionType !== currentSection) {
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª
      if (currentSection && sectionStart !== -1) {
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ü–∞ —Ä–∞–∑–¥–µ–ª–∞
        let endRow = i - 1;
        
        // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–∏—Å–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏)
        for (let j = i - 1; j >= sectionStart; j--) {
          const checkRow = data[j];
          if (!isStatisticsRow(checkRow) && !isEmptyRow(checkRow)) {
            endRow = j;
            break;
          }
        }
        
        sections.push({
          type: currentSection,
          name: getSectionName(currentSection),
          startRow: sectionStart,
          endRow: endRow,
          dataRows: endRow - sectionStart + 1
        });
      }
      
      // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
      currentSection = sectionType;
      sectionStart = i + 1; // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏
      console.log(`üìÇ –ù–∞–π–¥–µ–Ω —Ä–∞–∑–¥–µ–ª "${sectionName}" –≤ —Å—Ç—Ä–æ–∫–µ ${i + 1}, –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏ ${sectionStart + 1}`);
    }
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑–¥–µ–ª
  if (currentSection && sectionStart !== -1) {
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ü–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
    let endRow = data.length - 1;
    
    // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–∏—Å–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É)
    for (let j = data.length - 1; j >= sectionStart; j--) {
      const checkRow = data[j];
      if (!isStatisticsRow(checkRow) && !isEmptyRow(checkRow)) {
        endRow = j;
        break;
      }
    }
    
    sections.push({
      type: currentSection,
      name: getSectionName(currentSection),
      startRow: sectionStart,
      endRow: endRow,
      dataRows: endRow - sectionStart + 1
    });
  }
  
  return sections;
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
function isStatisticsRow(row) {
  if (!row || row.length === 0) return false;
  
  const firstCell = String(row[0] || '').toLowerCase().trim();
  return firstCell.includes('—Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤') || 
         firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞') ||
         firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
         firstCell.includes('–¥–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
         firstCell.includes('–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π') ||
         firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—á—Ç–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è');
}

function isEmptyRow(row) {
  return !row || row.every(cell => !cell || String(cell).trim() === '');
}

function getSectionName(sectionType) {
  const names = {
    'reviews': '–û—Ç–∑—ã–≤—ã',
    'commentsTop20': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20',
    'activeDiscussions': '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è'
  };
  return names[sectionType] || sectionType;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
const sections = simulateFindSectionBoundaries(mockData);

console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –†–ê–ó–î–ï–õ–û–í:');
sections.forEach((section, index) => {
  console.log(`${index + 1}. ${section.name}:`);
  console.log(`   –°—Ç—Ä–æ–∫–∏: ${section.startRow + 1}-${section.endRow + 1}`);
  console.log(`   –î–∞–Ω–Ω—ã–µ: ${section.dataRows} —Å—Ç—Ä–æ–∫`);
  console.log(`   –¢–∏–ø: ${section.type}`);
});

console.log('\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –≠–¢–ê–õ–û–ù–û–ú:');
console.log('‚úÖ –û–∂–∏–¥–∞–µ—Ç—Å—è:');
console.log('   - –û—Ç–∑—ã–≤—ã: 22 —Å—Ç—Ä–æ–∫–∏');
console.log('   - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: 20 —Å—Ç—Ä–æ–∫');
console.log('   - –û–±—Å—É–∂–¥–µ–Ω–∏—è: 631 —Å—Ç—Ä–æ–∫–∞');

console.log('\nüîç –ü–æ–ª—É—á–∞–µ—Ç—Å—è:');
sections.forEach(section => {
  console.log(`   - ${section.name}: ${section.dataRows} —Å—Ç—Ä–æ–∫`);
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å
const expectedCounts = { reviews: 22, commentsTop20: 20, activeDiscussions: 631 };
let allCorrect = true;

sections.forEach(section => {
  const expected = expectedCounts[section.type];
  const actual = section.dataRows;
  
  if (expected !== actual) {
    console.log(`‚ùå ${section.name}: –æ–∂–∏–¥–∞–ª–æ—Å—å ${expected}, –ø–æ–ª—É—á–µ–Ω–æ ${actual}`);
    allCorrect = false;
  } else {
    console.log(`‚úÖ ${section.name}: ${actual} —Å—Ç—Ä–æ–∫ - –ü–†–ê–í–ò–õ–¨–ù–û`);
  }
});

console.log('\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
if (allCorrect) {
  console.log('‚úÖ –í–°–ï –†–ê–ó–î–ï–õ–´ –û–ü–†–ï–î–ï–õ–ï–ù–´ –ü–†–ê–í–ò–õ–¨–ù–û!');
} else {
  console.log('‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï–ú –†–ê–ó–î–ï–õ–û–í');
} 