const ExcelJS = require('exceljs');

async function analyzeResultColumns() {
  console.log('üìä –ê–ù–ê–õ–ò–ó –ö–û–õ–û–ù–û–ö –í –†–ï–ó–£–õ–¨–¢–ò–†–£–Æ–©–ï–ú –§–ê–ô–õ–ï');
  
  try {
    const file = 'uploads/Fortedetrim_ORM_report_March_2025_—Ä–µ–∑—É–ª—å—Ç–∞—Ç_20250707.xlsx';
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(file);
    
    const sheet = workbook.getWorksheet(1);
    
    console.log('\nüîç –ü–ï–†–í–´–ï 15 –°–¢–†–û–ö:');
    for (let i = 1; i <= 15; i++) {
      const row = sheet.getRow(i);
      const values = [];
      for (let j = 1; j <= 10; j++) {
        const cell = row.getCell(j);
        let value = cell.text || cell.value;
        if (value === null || value === undefined) value = '';
        values.push(value.toString().substring(0, 20)); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
      }
      console.log(`–°—Ç—Ä–æ–∫–∞ ${i}: ${values.join(' | ')}`);
    }
    
    console.log('\nüéØ –ê–ù–ê–õ–ò–ó –ö–û–ù–ö–†–ï–¢–ù–´–• –ö–û–õ–û–ù–û–ö:');
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ (–Ω–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)
    let dataStartRow = 5; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 5 —Å—Ç—Ä–æ–∫–∏
    for (let i = dataStartRow; i <= dataStartRow + 10; i++) {
      const row = sheet.getRow(i);
      console.log(`\n–°—Ç—Ä–æ–∫–∞ ${i}:`);
      console.log(`  –ö–æ–ª–æ–Ω–∫–∞ D (–î–∞—Ç–∞): "${row.getCell(4).text || row.getCell(4).value}"`);
      console.log(`  –ö–æ–ª–æ–Ω–∫–∞ E (–ù–∏–∫): "${row.getCell(5).text || row.getCell(5).value}"`);
      console.log(`  –ö–æ–ª–æ–Ω–∫–∞ F: "${row.getCell(6).text || row.getCell(6).value}"`);
      console.log(`  –ö–æ–ª–æ–Ω–∫–∞ G: "${row.getCell(7).text || row.getCell(7).value}"`);
      console.log(`  –ö–æ–ª–æ–Ω–∫–∞ H: "${row.getCell(8).text || row.getCell(8).value}"`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

analyzeResultColumns(); 