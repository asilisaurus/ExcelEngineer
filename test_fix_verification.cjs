const fetch = require('node-fetch');
const FormData = require('form-data');
const fs = require('fs');

async function testFixedLogic() {
  try {
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏...');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å Google Sheets URL
    const googleSheetsUrl = 'https://docs.google.com/spreadsheets/d/1z4KJfXSNaV8Zw5Qi4hKdVsoKvt9GTSrweWv45URzB4I/edit?usp=sharing';
    
    const response = await fetch('http://localhost:3000/api/process-google-sheets', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        url: googleSheetsUrl,
        processorType: 'simple'
      })
    });
    
    const result = await response.json();
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏:', result);
    
    if (result.success) {
      console.log('üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      console.log('üìÅ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω:', result.filename);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞:', result.error);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testFixedLogic(); 