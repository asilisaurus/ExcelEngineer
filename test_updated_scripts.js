/**
 * üß™ –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ù–´–• –°–ö–†–ò–ü–¢–û–í
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º–∏ –ª–∏—Å—Ç–∞–º–∏ –≤ —Ç–æ–π –∂–µ —Ç–∞–±–ª–∏—Ü–µ
 * 
 * –ê–≤—Ç–æ—Ä: AI Assistant
 * –î–∞—Ç–∞: 2025
 */

/**
 * –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —ç—Ç–∞–ª–æ–Ω–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤
 */
function testReferenceSheetDetection() {
  console.log('üß™ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –≠–¢–ê–õ–û–ù–ù–´–• –õ–ò–°–¢–û–í');
  console.log('================================');
  
  try {
    const spreadsheet = SpreadsheetApp.openByUrl('https://docs.google.com/spreadsheets/d/1RT8T5gnDPe0KMikTmVNdSvxqDal3aQUmelpEwItgxMI/edit?usp=sharing');
    const sheets = spreadsheet.getSheets();
    
    console.log(`üìä –í—Å–µ–≥–æ –ª–∏—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ: ${sheets.length}`);
    
    const sourceSheets = [];
    const referenceSheets = [];
    
    for (const sheet of sheets) {
      const sheetName = sheet.getName();
      console.log(`üìã –õ–∏—Å—Ç: "${sheetName}"`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–∞–ª–æ–Ω–Ω—ã–º
      const isReference = isReferenceSheet(sheetName);
      
      if (isReference) {
        referenceSheets.push(sheetName);
        console.log(`  ‚úÖ –≠—Ç–∞–ª–æ–Ω–Ω—ã–π –ª–∏—Å—Ç`);
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å—Ö–æ–¥–Ω—ã–º (—Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Å—è—Ü)
        const monthInfo = detectMonthFromSheetName(sheetName);
        if (monthInfo) {
          sourceSheets.push({ name: sheetName, monthInfo: monthInfo });
          console.log(`  üìÖ –ò—Å—Ö–æ–¥–Ω—ã–π –ª–∏—Å—Ç: ${monthInfo.name} ${monthInfo.year}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç—Ç–∞–ª–æ–Ω
          const expectedReferenceName = `${monthInfo.name} ${monthInfo.year} (—ç—Ç–∞–ª–æ–Ω)`;
          const hasReference = sheets.some(s => s.getName() === expectedReferenceName);
          console.log(`  ${hasReference ? '‚úÖ' : '‚ùå'} –≠—Ç–∞–ª–æ–Ω: ${expectedReferenceName}`);
        }
      }
    }
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
    console.log(`üìÖ –ò—Å—Ö–æ–¥–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤: ${sourceSheets.length}`);
    console.log(`üìã –≠—Ç–∞–ª–æ–Ω–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤: ${referenceSheets.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    for (const source of sourceSheets) {
      const expectedReferenceName = `${source.monthInfo.name} ${source.monthInfo.year} (—ç—Ç–∞–ª–æ–Ω)`;
      const hasReference = referenceSheets.includes(expectedReferenceName);
      console.log(`${hasReference ? '‚úÖ' : '‚ùå'} ${source.name} -> ${expectedReferenceName}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ª–∏—Å—Ç —ç—Ç–∞–ª–æ–Ω–Ω—ã–º
 */
function isReferenceSheet(sheetName) {
  const suffixes = [' (—ç—Ç–∞–ª–æ–Ω)', ' (reference)', ' (etalon)'];
  return suffixes.some(suffix => sheetName.includes(suffix));
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∞
 */
function detectMonthFromSheetName(sheetName) {
  const lowerSheetName = sheetName.toLowerCase();
  
  const months = [
    { name: '–Ø–Ω–≤–∞—Ä—å', short: '–Ø–Ω–≤', number: 1 },
    { name: '–§–µ–≤—Ä–∞–ª—å', short: '–§–µ–≤', number: 2 },
    { name: '–ú–∞—Ä—Ç', short: '–ú–∞—Ä', number: 3 },
    { name: '–ê–ø—Ä–µ–ª—å', short: '–ê–ø—Ä', number: 4 },
    { name: '–ú–∞–π', short: '–ú–∞–π', number: 5 },
    { name: '–ò—é–Ω—å', short: '–ò—é–Ω', number: 6 },
    { name: '–ò—é–ª—å', short: '–ò—é–ª', number: 7 },
    { name: '–ê–≤–≥—É—Å—Ç', short: '–ê–≤–≥', number: 8 },
    { name: '–°–µ–Ω—Ç—è–±—Ä—å', short: '–°–µ–Ω', number: 9 },
    { name: '–û–∫—Ç—è–±—Ä—å', short: '–û–∫—Ç', number: 10 },
    { name: '–ù–æ—è–±—Ä—å', short: '–ù–æ—è', number: 11 },
    { name: '–î–µ–∫–∞–±—Ä—å', short: '–î–µ–∫', number: 12 }
  ];
  
  for (const month of months) {
    const monthVariants = [
      month.name.toLowerCase(),
      month.short.toLowerCase(),
      `${month.short}25`,
      `${month.name}25`,
      `${month.short}2025`,
      `${month.name}2025`
    ];
    
    if (monthVariants.some(variant => lowerSheetName.includes(variant))) {
      return {
        key: `${month.short}${month.year || 2025}`,
        name: month.name,
        short: month.short,
        number: month.number,
        year: 2025
      };
    }
  }
  
  return null;
}

/**
 * –¢–µ—Å—Ç –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ (–£–î–ê–õ–ï–ù - –Ω–µ –Ω—É–∂–µ–Ω)
 * –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–µ—Ä–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∞–ª–æ–Ω–∞
 */

/**
 * –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
 */
function runAllTests() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –í–°–ï–• –¢–ï–°–¢–û–í –û–ë–ù–û–í–õ–ï–ù–ù–´–• –°–ö–†–ò–ü–¢–û–í');
  console.log('==========================================');
  
  testReferenceSheetDetection();
  
  console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
} 