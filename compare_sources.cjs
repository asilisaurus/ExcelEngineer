const ExcelJS = require('exceljs');
const https = require('https');
const fs = require('fs');

async function downloadGoogleSheet(url) {
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Google Sheets URL –≤ Excel export URL
  const sheetId = url.match(/\/spreadsheets\/d\/([a-zA-Z0-9-_]+)/)?.[1];
  if (!sheetId) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ URL');
  }
  
  const exportUrl = `https://docs.google.com/spreadsheets/d/${sheetId}/export?format=xlsx`;
  const tempFilePath = './temp_google_download.xlsx';
  
  return new Promise((resolve, reject) => {
    const file = fs.createWriteStream(tempFilePath);
    
    https.get(exportUrl, (response) => {
      if (response.statusCode !== 200) {
        reject(new Error(`HTTP ${response.statusCode}: ${response.statusMessage}`));
        return;
      }
      
      response.pipe(file);
      
      file.on('finish', () => {
        file.close();
        console.log('üìÅ Google Sheets —Ñ–∞–π–ª —Å–∫–∞—á–∞–Ω:', tempFilePath);
        resolve(tempFilePath);
      });
      
      file.on('error', (err) => {
        fs.unlink(tempFilePath, () => {});
        reject(err);
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

async function analyzeSources() {
  try {
    console.log('üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö...\n');

    // 1. –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑ Google Sheets
    console.log('=== –ó–ê–ì–†–£–ó–ö–ê –ò–ó GOOGLE SHEETS ===');
    const googleSheetsUrl = 'https://docs.google.com/spreadsheets/d/1z4KJfXSNaV8Zw5Qi4hKdVsoKvt9GTSrweWv45URzB4I/edit?usp=sharing';
    const googleFilePath = await downloadGoogleSheet(googleSheetsUrl);
    
    // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets —Ñ–∞–π–ª
    const workbook1 = new ExcelJS.Workbook();
    await workbook1.xlsx.readFile(googleFilePath);
    
    const worksheet1 = workbook1.getWorksheet(1);
    let googleRows = 0;
    let googleDataRows = [];
    
    worksheet1.eachRow((row, rowNumber) => {
      googleRows++;
      const rowData = [];
      row.eachCell((cell, colNumber) => {
        rowData[colNumber - 1] = cell.value;
      });
      googleDataRows.push(rowData);
    });
    
    console.log(`üìä Google Sheets - –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${googleRows}`);
    
    // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    console.log('\n=== –ê–ù–ê–õ–ò–ó –í–´–ì–†–£–ñ–ï–ù–ù–û–ì–û –§–ê–ô–õ–ê ===');
    const uploadedFilePath = './test_download.xlsx';
    
    const workbook2 = new ExcelJS.Workbook();
    await workbook2.xlsx.readFile(uploadedFilePath);
    
    const worksheet2 = workbook2.getWorksheet(1);
    let uploadedRows = 0;
    let uploadedDataRows = [];
    
    worksheet2.eachRow((row, rowNumber) => {
      uploadedRows++;
      const rowData = [];
      row.eachCell((cell, colNumber) => {
        rowData[colNumber - 1] = cell.value;
      });
      uploadedDataRows.push(rowData);
    });
    
    console.log(`üìä –í—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª - –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${uploadedRows}`);
    
    // 4. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\n=== –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• ===');
    console.log(`Google Sheets —Å—Ç—Ä–æ–∫: ${googleRows}`);
    console.log(`–í—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å—Ç—Ä–æ–∫: ${uploadedRows}`);
    console.log(`–†–∞–∑–Ω–∏—Ü–∞: ${Math.abs(googleRows - uploadedRows)}`);
    
    // –ò—â–µ–º "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö"
    const googleDiscussions = googleDataRows.filter(row => 
      row[0] && row[0].toString().includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö')
    );
    const uploadedDiscussions = uploadedDataRows.filter(row => 
      row[0] && row[0].toString().includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö')
    );
    
    console.log(`\nüìä "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö":`);
    console.log(`Google Sheets: ${googleDiscussions.length}`);
    console.log(`–í—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${uploadedDiscussions.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Å—Ç—Ä–æ–∫ —Å –æ–±—Å—É–∂–¥–µ–Ω–∏—è–º–∏
    if (googleDiscussions.length > 0) {
      const firstDiscussion = googleDataRows.findIndex(row => 
        row[0] && row[0].toString().includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö')
      );
      const lastDiscussion = googleDataRows.map((row, index) => 
        row[0] && row[0].toString().includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö') ? index : -1
      ).filter(i => i !== -1).pop();
      
      console.log(`Google Sheets: –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–∞—Ö ${firstDiscussion + 1} - ${lastDiscussion + 1}`);
    }
    
    if (uploadedDiscussions.length > 0) {
      const firstDiscussion = uploadedDataRows.findIndex(row => 
        row[0] && row[0].toString().includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö')
      );
      const lastDiscussion = uploadedDataRows.map((row, index) => 
        row[0] && row[0].toString().includes('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö') ? index : -1
      ).filter(i => i !== -1).pop();
      
      console.log(`–í—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–∞—Ö ${firstDiscussion + 1} - ${lastDiscussion + 1}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    console.log('\n=== –ó–ê–ì–û–õ–û–í–û–ö ===');
    console.log('Google Sheets:');
    console.log(`  –°—Ç—Ä–æ–∫–∞ 1: ${googleDataRows[0]?.slice(0, 4).map(c => c ? c.toString().substring(0, 50) : '').join(' | ')}`);
    console.log('–í—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:');
    console.log(`  –°—Ç—Ä–æ–∫–∞ 1: ${uploadedDataRows[0]?.slice(0, 4).map(c => c ? c.toString().substring(0, 50) : '').join(' | ')}`);
    
    // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.unlinkSync(googleFilePath);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

analyzeSources(); 