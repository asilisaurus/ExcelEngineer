// üö® QUICK START CRITICAL - –ú–ì–ù–û–í–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö –ö–†–ò–¢–ò–ß–ï–°–ö–û–ô –ú–ò–°–°–ò–ò
// –¶–µ–ª—å: 95%+ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—Å–µ—Ö –º–µ—Å—è—Ü–µ–≤ (–§–µ–≤—Ä–∞–ª—å-–ú–∞–π 2025)

import { ExcelProcessorFinalV3 } from './server/services/excel-processor-final-v3.ts';
import fs from 'fs';
import path from 'path';

console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ú–ò–°–°–ò–Ø –ó–ê–ü–£–©–ï–ù–ê!');
console.log('üéØ –¶–µ–ª—å: 95%+ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—Å–µ—Ö –º–µ—Å—è—Ü–µ–≤');
console.log('‚ö° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n');

// üîß –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò
export async function launchNow() {
  console.log('üöÄ launchNow() - –ú–ì–ù–û–í–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö –í–°–ï–ô –ú–ò–°–°–ò–ò');
  
  try {
    // 1. –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    await quickCheck();
    
    // 2. –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const results = await runFinalTesting();
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏
    const success = validateResults(results);
    
    if (success) {
      console.log('‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ú–ò–°–°–ò–Ø –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–ê!');
      console.log('üèÜ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ç–æ—á–Ω–æ—Å—Ç—å 95%+');
      return { success: true, results };
    } else {
      console.log('‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø');
      return { success: false, results };
    }
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –í –ú–ò–°–°–ò–ò:', error);
    throw error;
  }
}

export async function quickCheck() {
  console.log('üîç quickCheck() - –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
  const sourceFile = 'source_structure_analysis.xlsx';
  const refFile = 'reference_structure_analysis.xlsx';
  
  if (!fs.existsSync(sourceFile)) {
    throw new Error(`‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${sourceFile}`);
  }
  
  if (!fs.existsSync(refFile)) {
    throw new Error(`‚ùå –≠—Ç–∞–ª–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${refFile}`);
  }
  
  console.log('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã');
  console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É');
  console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –º–∏—Å—Å–∏–∏\n');
  
  return true;
}

export async function runFinalTesting() {
  console.log('üß™ runFinalTesting() - –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –ú–ï–°–Ø–¶–ï–í');
  
  const processor = new ExcelProcessorFinalV3();
  const sourceFile = 'source_structure_analysis.xlsx';
  const results = {};
  
  // –¶–µ–ª–µ–≤—ã–µ –º–µ—Å—è—Ü—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const targetMonths = ['–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π'];
  
  for (const month of targetMonths) {
    console.log(`üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞: ${month}`);
    
    try {
      const result = await processor.processExcelFile(sourceFile, month);
      
      results[month] = {
        reviews: result.statistics.reviewsCount,
        comments: result.statistics.commentsCount,
        discussions: result.statistics.activeDiscussionsCount,
        accuracy: calculateAccuracy(result.statistics),
        processingTime: result.statistics.processingTime
      };
      
      console.log(`   üìä ${month}: ${result.statistics.reviewsCount} –æ—Ç–∑—ã–≤–æ–≤, ${result.statistics.commentsCount} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, ${result.statistics.activeDiscussionsCount} –æ–±—Å—É–∂–¥–µ–Ω–∏–π`);
      console.log(`   üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ${results[month].accuracy}%`);
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ ${month}:`, error);
      results[month] = { error: error.message };
    }
  }
  
  return results;
}

// üéØ –§–£–ù–ö–¶–ò–ò –í–ê–õ–ò–î–ê–¶–ò–ò
function calculateAccuracy(stats) {
  const target = { reviews: 13, comments: 15, discussions: 42 };
  
  const reviewsAccuracy = Math.max(0, 100 - Math.abs(stats.reviewsCount - target.reviews) / target.reviews * 100);
  const commentsAccuracy = Math.max(0, 100 - Math.abs(stats.commentsCount - target.comments) / target.comments * 100);
  const discussionsAccuracy = Math.max(0, 100 - Math.abs(stats.activeDiscussionsCount - target.discussions) / target.discussions * 100);
  
  return Math.round((reviewsAccuracy + commentsAccuracy + discussionsAccuracy) / 3);
}

function validateResults(results) {
  console.log('\nüîç –í–ê–õ–ò–î–ê–¶–ò–Ø –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
  
  let totalAccuracy = 0;
  let validMonths = 0;
  
  for (const [month, data] of Object.entries(results)) {
    if (data.error) {
      console.log(`‚ùå ${month}: –û–®–ò–ë–ö–ê - ${data.error}`);
      continue;
    }
    
    const accuracy = data.accuracy;
    console.log(`üìä ${month}: ${accuracy}% —Ç–æ—á–Ω–æ—Å—Ç–∏`);
    
    totalAccuracy += accuracy;
    validMonths++;
  }
  
  const avgAccuracy = validMonths > 0 ? totalAccuracy / validMonths : 0;
  
  console.log(`\nüéØ –û–ë–©–ê–Ø –¢–û–ß–ù–û–°–¢–¨: ${avgAccuracy.toFixed(1)}%`);
  console.log(`üìã –¶–µ–ª—å: 95%+ —Ç–æ—á–Ω–æ—Å—Ç–∏`);
  
  const success = avgAccuracy >= 95;
  console.log(`${success ? '‚úÖ' : '‚ùå'} –†–µ–∑—É–ª—å—Ç–∞—Ç: ${success ? '–£–°–ü–ï–•' : '–¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê'}`);
  
  return success;
}

// üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ú–ï–¢–†–ò–ö–ò
function displayCriticalMetrics(results) {
  console.log('\nüìä –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ú–ï–¢–†–ò–ö–ò:');
  console.log('‚ïê'.repeat(50));
  
  for (const [month, data] of Object.entries(results)) {
    if (data.error) continue;
    
    console.log(`üóìÔ∏è  ${month.toUpperCase()}`);
    console.log(`   ‚≠ê –û—Ç–∑—ã–≤—ã: ${data.reviews} (—Ü–µ–ª—å: ~13)`);
    console.log(`   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${data.comments} (—Ü–µ–ª—å: ~15)`);
    console.log(`   üî• –û–±—Å—É–∂–¥–µ–Ω–∏—è: ${data.discussions} (—Ü–µ–ª—å: ~42)`);
    console.log(`   üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ${data.accuracy}%`);
    console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è: ${data.processingTime}ms`);
    console.log('');
  }
}

// üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–ü–£–°–ö –ü–†–ò –ò–ú–ü–û–†–¢–ï
if (import.meta.url === `file://${process.argv[1]}`) {
  console.log('üö® –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ó–ê–ü–£–°–ö –ö–†–ò–¢–ò–ß–ï–°–ö–û–ô –ú–ò–°–°–ò–ò');
  
  launchNow()
    .then(result => {
      if (result.success) {
        console.log('üèÜ –ú–ò–°–°–ò–Ø –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!');
        displayCriticalMetrics(result.results);
      } else {
        console.log('‚ö†Ô∏è –ú–ò–°–°–ò–Ø –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò');
        displayCriticalMetrics(result.results);
      }
    })
    .catch(error => {
      console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
      process.exit(1);
    });
}

export default { launchNow, quickCheck, runFinalTesting };