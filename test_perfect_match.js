import ExcelJS from 'exceljs';
import path from 'path';
import { simpleProcessor } from './server/services/excel-processor-simple.ts';

async function testPerfectMatch() {
  try {
    console.log('=== –¢–ï–°–¢ –ò–î–ï–ê–õ–¨–ù–û–ì–û –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –° –≠–¢–ê–õ–û–ù–û–ú ===\n');
    
    // –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    const testFile = 'attached_assets/–§–æ—Ä—Ç–µ–¥–µ—Ç—Ä–∏–º_ORM_–æ—Ç—á–µ—Ç_–∏—Å—Ö–æ–¥–Ω–∏–∫_1751040742705.xlsx';
    
    console.log('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª...');
    const result = await simpleProcessor.processExcelFile(testFile);
    
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–†–ê–ë–û–¢–ö–ò:');
    console.log(`üìÅ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: ${result.outputPath}`);
    console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`  - –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${result.statistics.totalRows}`);
    console.log(`  - –û—Ç–∑—ã–≤—ã (–∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞): ${result.statistics.reviewsCount}`);
    console.log(`  - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (—Ñ–æ—Ä—É–º—ã, —Å–æ–æ–±—â–µ—Å—Ç–≤–∞): ${result.statistics.commentsCount}`);
    console.log(`  - –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è: ${result.statistics.activeDiscussionsCount}`);
    console.log(`  - –°—É–º–º–∞—Ä–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: ${result.statistics.totalViews.toLocaleString()}`);
    console.log(`  - –î–æ–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏–π: ${result.statistics.engagementRate}%`);
    console.log(`  - –ü–ª–æ—â–∞–¥–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏: ${result.statistics.platformsWithData}%`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –§–ê–ô–õ–ê:');
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.readFile(result.outputPath);
    const worksheet = workbook.getWorksheet(1);
    
    console.log(`üìã –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${worksheet.rowCount}`);
    console.log(`üìã –í—Å–µ–≥–æ —Å—Ç–æ–ª–±—Ü–æ–≤: ${worksheet.columnCount}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    console.log('\nüìÑ –ó–ê–ì–û–õ–û–í–ö–ò:');
    console.log(`–°—Ç—Ä–æ–∫–∞ 1: ${worksheet.getCell('A1').value} | ${worksheet.getCell('C1').value}`);
    console.log(`–°—Ç—Ä–æ–∫–∞ 2: ${worksheet.getCell('A2').value} | ${worksheet.getCell('C2').value}`);
    console.log(`–°—Ç—Ä–æ–∫–∞ 3: ${worksheet.getCell('A3').value} | ${worksheet.getCell('C3').value}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    console.log('\nüìã –ó–ê–ì–û–õ–û–í–ö–ò –¢–ê–ë–õ–ò–¶–´:');
    for (let col = 1; col <= 8; col++) {
      const cell = worksheet.getCell(4, col);
      console.log(`–°—Ç–æ–ª–±–µ—Ü ${col}: ${cell.value}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –í –ü–†–ê–í–û–ô –ß–ê–°–¢–ò:');
    console.log(`I4 (–û—Ç–∑—ã–≤): ${worksheet.getCell('I4').value}`);
    console.log(`J4 (–£–ø–æ–º–∏–Ω–∞–Ω): ${worksheet.getCell('J4').value}`);
    console.log(`K4 (–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â): ${worksheet.getCell('K4').value}`);
    console.log(`L4 (–í—Å–µ–≥–æ): ${worksheet.getCell('L4').value}`);
    
    // –ù–∞–π–¥–µ–º —Å—Ç—Ä–æ–∫—É "–ò—Ç–æ–≥–æ"
    console.log('\nüîç –ü–û–ò–°–ö –°–¢–†–û–ö–ò "–ò–¢–û–ì–û":');
    for (let row = 1; row <= worksheet.rowCount; row++) {
      const cellA = worksheet.getCell(row, 1);
      if (cellA.value && cellA.value.toString().toLowerCase().includes('–∏—Ç–æ–≥–æ')) {
        console.log(`–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "–ò—Ç–æ–≥–æ" –≤ —Å—Ç—Ä–æ–∫–µ ${row}:`);
        console.log(`  I${row}: ${worksheet.getCell(row, 9).value}`);
        console.log(`  J${row}: ${worksheet.getCell(row, 10).value}`);
        console.log(`  K${row}: ${worksheet.getCell(row, 11).value}`);
        console.log(`  L${row}: ${worksheet.getCell(row, 12).value}`);
        break;
      }
    }
    
    // –ù–∞–π–¥–µ–º –∏ –ø—Ä–æ–≤–µ—Ä–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –§–ò–ù–ê–õ–¨–ù–û–ô –°–¢–ê–¢–ò–°–¢–ò–ö–ò:');
    for (let row = worksheet.rowCount - 10; row <= worksheet.rowCount; row++) {
      const cellA = worksheet.getCell(row, 1);
      if (cellA.value) {
        const label = cellA.value.toString();
        const value = worksheet.getCell(row, 6).value;
        
        if (label.includes('–°—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ') || 
            label.includes('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫') || 
            label.includes('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π') || 
            label.includes('–î–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π') || 
            label.includes('–ü–ª–æ—â–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π')) {
          console.log(`–°—Ç—Ä–æ–∫–∞ ${row}: ${label} = ${value}`);
        }
      }
    }
    
    console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

testPerfectMatch(); 