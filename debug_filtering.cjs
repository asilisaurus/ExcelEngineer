const XLSX = require('xlsx');
const fs = require('fs');

async function debugFiltering() {
  console.log('üîç –î–ï–ë–ê–ì –§–ò–õ–¨–¢–†–ê–¶–ò–ò');
  console.log('===================');
  
  const testFile = 'uploads/Fortedetrim ORM report source.xlsx';
  
  try {
    const workbook = XLSX.readFile(testFile);
    
    // –ù–∞–π–¥–µ–º –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –º–µ—Å—è—Ü–∞
    const months = ["–Ø–Ω–≤25", "–§–µ–≤25", "–ú–∞—Ä25", "–ú–∞—Ä—Ç25", "–ê–ø—Ä25", "–ú–∞–π25", "–ò—é–Ω25", 
                   "–ò—é–ª25", "–ê–≤–≥25", "–°–µ–Ω25", "–û–∫—Ç25", "–ù–æ—è25", "–î–µ–∫25"];
    
    const sheetName = workbook.SheetNames.find(name => 
      months.some(month => name.includes(month))
    ) || workbook.SheetNames[0];
    
    const sheet = workbook.Sheets[sheetName];
    const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });
    
    console.log(`üìä –õ–∏—Å—Ç: ${sheetName}`);
    console.log(`üìã –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${data.length}`);
    
    // –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
    let totalRows = 0;
    let withText = 0;
    let withUrls = 0;
    let withDates = 0;
    let withAuthors = 0;
    let withPostTypes = 0;
    let qualityRows = 0;
    
    const reviewPlatforms = ['otzovik', 'irecommend', 'otzyvru', 'pravogolosa', 'medum', 
                            'vseotzyvy', 'otzyvy.pro', 'market.yandex', 'dialog.ru',
                            'goodapteka', 'megapteka', 'uteka', 'nfapteka'];
    
    const commentPlatforms = ['dzen.ru', 'woman.ru', 'forum.baby.ru', 'vk.com', 't.me',
                             'ok.ru', 'otvet.mail.ru', 'babyblog.ru', 'mom.life', 
                             'youtube.com'];
    
    console.log('\nüîç –ê–ù–ê–õ–ò–ó –ü–ï–†–í–´–• 50 –°–¢–†–û–ö:');
    console.log('==========================');
    
    for (let i = 0; i < Math.min(50, data.length); i++) {
      const row = data[i];
      if (!row || row.length === 0) continue;
      
      totalRows++;
      
      const colA = (row[0] || '').toString().toLowerCase();
      const colB = (row[1] || '').toString();
      const colD = (row[3] || '').toString();
      const colE = (row[4] || '').toString();
      const colG = row[6];
      const colH = (row[7] || '').toString();
      const colN = (row[13] || '').toString();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
      if (colE && colE.length >= 20) withText++;
      if (colD && colD.includes('http')) withUrls++;
      if (colG && typeof colG === 'number') withDates++;
      if (colH && colH.length >= 3) withAuthors++;
      if (colN && (colN.toLowerCase() === '–æ—Å' || colN.toLowerCase() === '—Ü—Å')) withPostTypes++;
      
      let qualityScore = 100;
      if (!colE || colE.length < 20) qualityScore -= 30;
      if (!colD || !colD.includes('http')) qualityScore -= 25;
      if (!colG || typeof colG !== 'number') qualityScore -= 20;
      if (!colH || colH.length < 3) qualityScore -= 15;
      if (!colN || (colN.toLowerCase() !== '–æ—Å' && colN.toLowerCase() !== '—Ü—Å')) qualityScore -= 10;
      
      if (qualityScore >= 40) qualityRows++;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç—Ä–æ–∫
      if (i < 10) {
        const type = colA.includes('–æ—Ç–∑—ã–≤') ? 'review' : 
                     colA.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä') ? 'comment' : 
                     (colB || colD || colE) ? 'content' : 'empty';
        
        console.log(`–°—Ç—Ä–æ–∫–∞ ${i + 1} (${type}): A="${colA.substring(0, 20)}..." B="${colB.substring(0, 30)}..." D="${colD.substring(0, 30)}..." E="${colE.substring(0, 40)}..." N="${colN}" | Score: ${qualityScore}`);
      }
    }
    
    console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ò–õ–¨–¢–†–ê–¶–ò–ò:');
    console.log('=========================');
    console.log(`–í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: ${totalRows}`);
    console.log(`–° —Ç–µ–∫—Å—Ç–æ–º (‚â•20 —Å–∏–º–≤–æ–ª–æ–≤): ${withText} (${Math.round(withText/totalRows*100)}%)`);
    console.log(`–° URL (—Å–æ–¥–µ—Ä–∂–∏—Ç http): ${withUrls} (${Math.round(withUrls/totalRows*100)}%)`);
    console.log(`–° –¥–∞—Ç–∞–º–∏ (—á–∏—Å–ª–æ): ${withDates} (${Math.round(withDates/totalRows*100)}%)`);
    console.log(`–° –∞–≤—Ç–æ—Ä–∞–º–∏ (‚â•3 —Å–∏–º–≤–æ–ª–∞): ${withAuthors} (${Math.round(withAuthors/totalRows*100)}%)`);
    console.log(`–° —Ç–∏–ø–∞–º–∏ –ø–æ—Å—Ç–æ–≤ (–û–°/–¶–°): ${withPostTypes} (${Math.round(withPostTypes/totalRows*100)}%)`);
    console.log(`–ö–∞—á–µ—Å—Ç–≤–æ ‚â•40: ${qualityRows} (${Math.round(qualityRows/totalRows*100)}%)`);
    
    // –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    let contentRows = 0;
    let reviewRows = 0;
    let commentRows = 0;
    
    for (let i = 0; i < data.length; i++) {
      const row = data[i];
      if (!row || row.length === 0) continue;
      
      const colA = (row[0] || '').toString().toLowerCase();
      const colB = (row[1] || '').toString();
      const colD = (row[3] || '').toString();
      const colE = (row[4] || '').toString();
      const colN = (row[13] || '').toString().toLowerCase();
      
      // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
      if (colA.includes('—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è') || colA.includes('–ø–ª–æ—â–∞–¥–∫–∞') || 
          colB.includes('–ø–ª–æ—â–∞–¥–∫–∞') || colE.includes('—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è') ||
          colA.includes('–ø–ª–∞–Ω') || colA.includes('–∏—Ç–æ–≥–æ')) {
        continue;
      }
      
      // –°–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
      if ((colA === '–æ—Ç–∑—ã–≤—ã' || colA === '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏') && !colB && !colD && !colE) {
        continue;
      }
      
      // –ê–Ω–∞–ª–∏–∑ –ø–æ URL –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
      const urlText = colB + ' ' + colD;
      const isReviewPlatform = reviewPlatforms.some(platform => 
        urlText.toLowerCase().includes(platform)
      );
      const isCommentPlatform = commentPlatforms.some(platform => 
        urlText.toLowerCase().includes(platform)
      );
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Ç–∏–ø—É –ø–æ—Å—Ç–∞
      if ((colB || colD || colE) && (isReviewPlatform || colN === '–æ—Å')) {
        reviewRows++;
        contentRows++;
      } else if ((colB || colD || colE) && (isCommentPlatform || colN === '—Ü—Å')) {
        commentRows++;
        contentRows++;
      } else if (colB || colD || colE) {
        contentRows++;
      }
    }
    
    console.log('\nüìã –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø –ö–û–ù–¢–ï–ù–¢–ê:');
    console.log('=========================');
    console.log(`–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º: ${contentRows}`);
    console.log(`–û—Ç–∑—ã–≤—ã: ${reviewRows}`);
    console.log(`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${commentRows}`);
    console.log(`–ù–µ–∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: ${contentRows - reviewRows - commentRows}`);
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ñ–∏–ª—å—Ç—Ä–æ–≤
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('================');
    console.log('1. –û—Å–ª–∞–±–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä URL - –º–Ω–æ–≥–æ –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –≤–∞–ª–∏–¥–Ω—ã—Ö URL');
    console.log('2. –£–º–µ–Ω—å—à–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–æ 10 —Å–∏–º–≤–æ–ª–æ–≤');
    console.log('3. –ù–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞—Ç—ã –∏ –∞–≤—Ç–æ—Ä–æ–≤');
    console.log('4. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø–∞–º –ø–æ—Å—Ç–æ–≤');
    console.log('5. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –≥–∏–±–∫—É—é —Å–∏—Å—Ç–µ–º—É –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–±–∞–≥–µ:', error);
  }
}

debugFiltering().catch(console.error); 