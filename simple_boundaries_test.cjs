/**
 * üîç –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ì–†–ê–ù–ò–¶ –†–ê–ó–î–ï–õ–û–í
 */

console.log('üîç –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ì–†–ê–ù–ò–¶ –†–ê–ó–î–ï–õ–û–í');
console.log('==============================');

// –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testData = [
  ['', '', '', ''],                          // 1
  ['', '', '', ''],                          // 2
  ['', '', '', ''],                          // 3
  ['–ü–ª–æ—â–∞–¥–∫–∞', '–°—Å—ã–ª–∫–∞', '–¢–µ–º–∞', '–¢–µ–∫—Å—Ç'],  // 4 - –∑–∞–≥–æ–ª–æ–≤–∫–∏
  ['', '', '', ''],                          // 5
  ['–æ—Ç–∑—ã–≤—ã', '', '', ''],                    // 6 - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞1', '—Å—Å—ã–ª–∫–∞1', '—Ç–µ–º–∞1', '—Ç–µ–∫—Å—Ç1'], // 7 - –¥–∞–Ω–Ω—ã–µ
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞2', '—Å—Å—ã–ª–∫–∞2', '—Ç–µ–º–∞2', '—Ç–µ–∫—Å—Ç2'], // 8 - –¥–∞–Ω–Ω—ã–µ
  ['–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ø-20 –≤—ã–¥–∞—á–∏', '', '', ''],    // 9 - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞3', '—Å—Å—ã–ª–∫–∞3', '—Ç–µ–º–∞3', '—Ç–µ–∫—Å—Ç3'], // 10 - –¥–∞–Ω–Ω—ã–µ
  ['–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)', '', '', ''], // 11 - –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—Å—É–∂–¥–µ–Ω–∏–π
  ['–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞4', '—Å—Å—ã–ª–∫–∞4', '—Ç–µ–º–∞4', '—Ç–µ–∫—Å—Ç4'], // 12 - –¥–∞–Ω–Ω—ã–µ
  ['', '', '', ''],                          // 13
  ['—Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤* 1000', '', '', ''], // 14 - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  ['–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞ (–æ—Ç–∑—ã–≤—ã) 2', '', '', ''], // 15 - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
];

console.log(`üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: ${testData.length} —Å—Ç—Ä–æ–∫`);

// –§—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
function isStatisticsRow(row) {
  if (!row || row.length === 0) return false;
  
  const firstCell = String(row[0] || '').toLowerCase().trim();
  return firstCell.includes('—Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ') || 
         firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫') ||
         firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
         firstCell.includes('–¥–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π');
}

function isEmptyRow(row) {
  return !row || row.every(cell => !cell || String(cell).trim() === '');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function findSectionBoundaries(data) {
  console.log('\nüîç –ü–û–ò–°–ö –ì–†–ê–ù–ò–¶ –†–ê–ó–î–ï–õ–û–í');
  
  const sections = [];
  let currentSection = null;
  let sectionStart = -1;
  
  const dataStartRow = 5; // CONFIG.STRUCTURE.dataStartRow - 1
  
  for (let i = dataStartRow - 1; i < data.length; i++) {
    const row = data[i];
    const firstCell = String(row[0] || '').toLowerCase().trim();
    
    console.log(`–°—Ç—Ä–æ–∫–∞ ${i + 1}: "${firstCell}" (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${isStatisticsRow(row)})`);
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if (isStatisticsRow(row)) {
      console.log(`  ‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É`);
      continue;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–∞–∑–¥–µ–ª–∞
    let sectionType = null;
    let sectionName = '';
    
    if (firstCell === '–æ—Ç–∑—ã–≤—ã' || (firstCell.includes('–æ—Ç–∑—ã–≤—ã') && !firstCell.includes('—Ç–æ–ø-20') && !firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è') && !firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'))) {
      sectionType = 'reviews';
      sectionName = '–û—Ç–∑—ã–≤—ã';
    } else if (firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ø-20') || firstCell.includes('—Ç–æ–ø-20 –≤—ã–¥–∞—á–∏')) {
      sectionType = 'commentsTop20';
      sectionName = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20';
    } else if (firstCell.includes('–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è') || firstCell.includes('–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')) {
      sectionType = 'activeDiscussions';
      sectionName = '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è';
    }
    
    // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    if (sectionType && sectionType !== currentSection) {
      console.log(`  üìÇ –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª: "${sectionName}"`);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª
      if (currentSection && sectionStart !== -1) {
        let endRow = i - 1;
        
        // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        for (let j = i - 1; j >= sectionStart; j--) {
          const checkRow = data[j];
          if (!isStatisticsRow(checkRow) && !isEmptyRow(checkRow)) {
            endRow = j;
            break;
          }
        }
        
        const dataRows = endRow - sectionStart + 1;
        console.log(`  ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª "${getSectionName(currentSection)}" (—Å—Ç—Ä–æ–∫–∏ ${sectionStart + 1}-${endRow + 1}, –¥–∞–Ω–Ω—ã—Ö: ${dataRows})`);
        
        sections.push({
          type: currentSection,
          name: getSectionName(currentSection),
          startRow: sectionStart,
          endRow: endRow,
          dataRows: dataRows
        });
      }
      
      // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
      currentSection = sectionType;
      sectionStart = i + 1; // –î–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏
      console.log(`  üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª "${sectionName}", –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏ ${sectionStart + 1}`);
    }
  }
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑–¥–µ–ª
  if (currentSection && sectionStart !== -1) {
    let endRow = data.length - 1;
    
    // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
    for (let j = data.length - 1; j >= sectionStart; j--) {
      const checkRow = data[j];
      if (!isStatisticsRow(checkRow) && !isEmptyRow(checkRow)) {
        endRow = j;
        break;
      }
    }
    
    const dataRows = endRow - sectionStart + 1;
    console.log(`  ‚úÖ –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑–¥–µ–ª "${getSectionName(currentSection)}" (—Å—Ç—Ä–æ–∫–∏ ${sectionStart + 1}-${endRow + 1}, –¥–∞–Ω–Ω—ã—Ö: ${dataRows})`);
    
    sections.push({
      type: currentSection,
      name: getSectionName(currentSection),
      startRow: sectionStart,
      endRow: endRow,
      dataRows: dataRows
    });
  }
  
  return sections;
}

function getSectionName(sectionType) {
  const names = {
    'reviews': '–û—Ç–∑—ã–≤—ã',
    'commentsTop20': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20',
    'activeDiscussions': '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è'
  };
  return names[sectionType] || sectionType;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
const sections = findSectionBoundaries(testData);

console.log('\nüìã –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
sections.forEach((section, index) => {
  console.log(`${index + 1}. ${section.name}:`);
  console.log(`   –°—Ç—Ä–æ–∫–∏: ${section.startRow + 1}-${section.endRow + 1}`);
  console.log(`   –î–∞–Ω–Ω—ã–µ: ${section.dataRows} —Å—Ç—Ä–æ–∫`);
});

console.log('\nüéØ –û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
console.log('   - –û—Ç–∑—ã–≤—ã: 2 —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö (—Å—Ç—Ä–æ–∫–∏ 7-8)');
console.log('   - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: 1 —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Å—Ç—Ä–æ–∫–∞ 10)');
console.log('   - –û–±—Å—É–∂–¥–µ–Ω–∏—è: 1 —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Å—Ç—Ä–æ–∫–∞ 12)');

console.log('\nüîç –ê–ù–ê–õ–ò–ó:');
if (sections.length === 3) {
  console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ 3 —Ä–∞–∑–¥–µ–ª–∞ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
} else {
  console.log(`‚ùå –ù–∞–π–¥–µ–Ω–æ ${sections.length} —Ä–∞–∑–¥–µ–ª–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å 3)`);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
const sectionTypes = sections.map(s => s.type);
const uniqueTypes = [...new Set(sectionTypes)];
if (sectionTypes.length === uniqueTypes.length) {
  console.log('‚úÖ –ù–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Ä–∞–∑–¥–µ–ª–æ–≤');
} else {
  console.log('‚ùå –ï—Å—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã —Ä–∞–∑–¥–µ–ª–æ–≤');
} 