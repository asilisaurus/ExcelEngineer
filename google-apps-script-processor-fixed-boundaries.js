/**
 * üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ü–†–û–¶–ï–°–°–û–† –° –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ì–†–ê–ù–ò–¶–ê–ú–ò –†–ê–ó–î–ï–õ–û–í
 * Google Apps Script –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
 * –í–µ—Ä—Å–∏—è: 4.0.0 - –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ì–†–ê–ù–ò–¶
 * 
 * –ê–≤—Ç–æ—Ä: AI Assistant + Background Agent bc-2954e872-79f8-4d41-b422-413e62f0b031
 * –î–∞—Ç–∞: 2025
 * 
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
 * - ‚úÖ findSectionBoundaries: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤ (sectionStart = i + 1)
 * - ‚úÖ processData: —É–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ –≥—Ä–∞–Ω–∏—Ü–∞–º
 * - ‚úÖ isDataRow: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Å columnMapping
 * - ‚úÖ determinePostTypeBySection: —É–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ç–∏–ø–æ–≤
 */

// ==================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê ====================

const CONFIG = {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–û–°–ù–û–í–ê–ù–´ –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)
  STRUCTURE: {
    headerRow: 4,        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –í–°–ï–ì–î–ê –≤ —Å—Ç—Ä–æ–∫–µ 4
    dataStartRow: 5,     // –î–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å —Å—Ç—Ä–æ–∫–∏ 5
    infoRows: [1, 2, 3], // –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Å—Ç—Ä–æ–∫–∞—Ö 1-3
    maxRows: 10000
  },
  
  // –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–û–°–ù–û–í–ê–ù–ê –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)
  CONTENT_TYPES: {
    REVIEWS: ['–û–°', '–û—Ç–∑—ã–≤—ã –°–∞–π—Ç–æ–≤', '–æ—Å', '–æ—Ç–∑—ã–≤—ã —Å–∞–π—Ç–æ–≤'],
    TARGETED: ['–¶–°', '–¶–µ–ª–µ–≤—ã–µ –°–∞–π—Ç—ã', '—Ü—Å', '—Ü–µ–ª–µ–≤—ã–µ —Å–∞–π—Ç—ã'],
    SOCIAL: ['–ü–°', '–ü–ª–æ—â–∞–¥–∫–∏ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ', '–ø—Å', '–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ']
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ (–≥–∏–±–∫–∏–µ)
  COLUMNS: {
    PLATFORM: ['–ø–ª–æ—â–∞–¥–∫–∞', 'platform', 'site', '–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '–∏—Å—Ç–æ—á–Ω–∏–∫'],
    TEXT: ['—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '—Ç–µ–∫—Å—Ç', 'message', 'content', '—Å–æ–æ–±—â–µ–Ω–∏–µ', '–æ–ø–∏—Å–∞–Ω–∏–µ'],
    DATE: ['–¥–∞—Ç–∞', 'date', 'created', '–≤—Ä–µ–º—è', '–¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è'],
    AUTHOR: ['–∞–≤—Ç–æ—Ä', '–Ω–∏–∫', 'author', 'nickname', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', '–∏–º—è'],
    VIEWS: ['–ø—Ä–æ—Å–º–æ—Ç—Ä—ã', '–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ', 'views', '–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤', '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤'],
    ENGAGEMENT: ['–≤–æ–≤–ª–µ—á–µ–Ω–∏–µ', 'engagement', '–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ'],
    POST_TYPE: ['—Ç–∏–ø –ø–æ—Å—Ç–∞', '—Ç–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', 'post_type', '—Ç–∏–ø', '–∫–∞—Ç–µ–≥–æ—Ä–∏—è'],
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
    THEME: ['—Ç–µ–º–∞', 'theme', 'subject', '–∑–∞–≥–æ–ª–æ–≤–æ–∫'],
    LINK: ['—Å—Å—ã–ª–∫–∞', 'link', 'url', '–∞–¥—Ä–µ—Å'],
    RATING: ['–æ—Ü–µ–Ω–∫–∞', 'rating', '—Ä–µ–π—Ç–∏–Ω–≥', '–∑–≤–µ–∑–¥—ã']
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  FORMATTING: {
    DATE_FORMAT: 'dd.mm.yyyy',
    NUMBER_FORMAT: '#,##0',
    CURRENCY_FORMAT: '#,##0 ‚ÇΩ'
  },
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  TESTING: {
    ENABLE_DEBUG: true,
    LOG_DETAILS: true,
    VALIDATE_RESULTS: true
  }
};

// ==================== –ö–õ–ê–°–° –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê ====================

/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤
 */
class FixedMonthlyReportProcessor {
  constructor() {
    this.stats = {
      totalRows: 0,
      reviewsCount: 0,
      targetedCount: 0,
      socialCount: 0,
      commentsTop20Count: 0,
      activeDiscussionsCount: 0,
      totalViews: 0,
      processingTime: 0,
      errors: []
    };
    
    this.columnMapping = {};
    this.monthInfo = null;
    this.contentSections = {
      reviews: [],
      targeted: [],
      social: []
    };
  }

  /**
   * –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞
   */
  processReport(spreadsheetId, sheetName = null) {
    const startTime = Date.now();
    
    try {
      console.log('üöÄ FIXED PROCESSOR - –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏');
      
      // 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
      const sourceData = this.getSourceData(spreadsheetId, sheetName);
      
      // 2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ (sheetName –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ)
      this.monthInfo = this.detectMonth(sourceData, sheetName);
      console.log(`üìÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω –º–µ—Å—è—Ü: ${this.monthInfo.name} ${this.monthInfo.year}`);
      
      // 3. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (–û–°–ù–û–í–ê–ù –ù–ê –ê–ù–ê–õ–ò–ó–ï –ë–≠–ö–ê–ì–ï–ù–¢–ê 1)
      this.analyzeDataStructure(sourceData);
      
      // 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      const processedData = this.processData(sourceData);
      
      // 5. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
      const reportUrl = this.createReport(processedData);
      
      // 6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      this.stats.processingTime = Date.now() - startTime;
      
      console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', this.stats);
      
      return {
        success: true,
        reportUrl: reportUrl,
        statistics: this.stats,
        monthInfo: this.monthInfo
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error);
      this.stats.errors.push(error.toString());
      
      return {
        success: false,
        error: error.toString(),
        statistics: this.stats
      };
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–û–ë–ù–û–í–õ–ï–ù–û –ù–ê –û–°–ù–û–í–ï –ê–ù–ê–õ–ò–ó–ê)
   */
  getSourceData(spreadsheetId, sheetName) {
    const spreadsheet = SpreadsheetApp.openById(spreadsheetId);
    
    const sheet = sheetName ? spreadsheet.getSheetByName(sheetName) : spreadsheet.getActiveSheet();
    
    if (!sheet) {
      throw new Error(`–õ–∏—Å—Ç "${sheetName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    const data = sheet.getDataRange().getValues();
    this.stats.totalRows = data.length;
    
    console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data.length} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö`);
    console.log(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ ${CONFIG.STRUCTURE.headerRow}, –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏ ${CONFIG.STRUCTURE.dataStartRow}`);
    
    return data;
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏–∑ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∏ 1-3)
   */
  detectMonth(data, sheetName = null) {
    // 1. –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—è—Ü –∏–∑ sheetName (–µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω)
    if (sheetName) {
      const monthFromSheet = this.extractMonthFromText(sheetName);
      if (monthFromSheet) {
        console.log(`üìÖ –ú–µ—Å—è—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –∏–º–µ–Ω–∏ –ª–∏—Å—Ç–∞ (–∞—Ä–≥—É–º–µ–Ω—Ç): ${monthFromSheet.name} ${monthFromSheet.year}`);
        return { ...monthFromSheet, detectedFrom: 'sheet' };
      }
    }
    
    // 2. –ü—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—è—Ü –∏–∑ –∏–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
    try {
      const activeSheet = SpreadsheetApp.getActiveSheet();
      if (activeSheet) {
        const activeSheetName = activeSheet.getName();
        const monthFromSheet = this.extractMonthFromText(activeSheetName);
        if (monthFromSheet) {
          console.log(`üìÖ –ú–µ—Å—è—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –∏–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞: ${monthFromSheet.name} ${monthFromSheet.year}`);
          return { ...monthFromSheet, detectedFrom: 'sheet' };
        }
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞:', error.message);
    }
    
    // 3. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –∏—â–µ–º –≤ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Å—Ç—Ä–æ–∫–∏ 1-3)
    for (let i = 0; i < Math.min(3, data.length); i++) {
      const rowText = data[i].join(' ').toLowerCase();
      const monthFromMeta = this.extractMonthFromText(rowText);
      if (monthFromMeta) {
        console.log(`üìÖ –ú–µ—Å—è—Ü –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: ${monthFromMeta.name} ${monthFromMeta.year}`);
        return { ...monthFromMeta, detectedFrom: 'meta' };
      }
    }
    
    // 4. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    const now = new Date();
    return {
      name: this.getMonthName(now.getMonth()),
      short: this.getMonthShort(now.getMonth()),
      number: now.getMonth() + 1,
      year: now.getFullYear(),
      detectedFrom: 'default'
    };
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
   */
  analyzeDataStructure(data) {
    console.log('üó∫Ô∏è –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ 4
    if (data.length > CONFIG.STRUCTURE.headerRow - 1) {
      const headers = data[CONFIG.STRUCTURE.headerRow - 1];
      console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:', headers.slice(0, 10).join(', '));
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫
    this.columnMapping = this.getColumnMapping();
    console.log('üó∫Ô∏è –ú–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π):', this.columnMapping);
  }

  /**
   * üîß –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô processData() - —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ —Ä–∞–∑–¥–µ–ª–æ–≤
   */
  processData(data) {
    const processedData = {
      reviews: [],
      commentsTop20: [],
      activeDiscussions: [],
      statistics: {
        totalReviews: 0,
        totalCommentsTop20: 0,
        totalActiveDiscussions: 0,
        totalViews: 0,
        platforms: new Set()
      }
    };
    
    let processedRows = 0;
    let skippedRows = 0;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥
    const columnMapping = this.getColumnMapping();
    
    // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤
    const sections = this.findSectionBoundariesFixed(data);
    console.log('üìÇ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ):', sections);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª –æ—Ç–¥–µ–ª—å–Ω–æ
    for (const section of sections) {
      console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ "${section.name}" (—Å—Ç—Ä–æ–∫–∏ ${section.startRow + 1}-${section.endRow + 1})`);
      
      let sectionRows = 0;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –í –ü–†–ï–î–ï–õ–ê–• —Ä–∞–∑–¥–µ–ª–∞
      for (let i = section.startRow; i <= section.endRow && i < data.length; i++) {
        const row = data[i];
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        if (this.isSectionHeader(row) || this.isEmptyRow(row)) {
          skippedRows++;
          continue;
        }
        
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if (this.isStatisticsRow(row)) {
          skippedRows++;
          continue;
        }
        
        // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
        if (!this.isDataRowFixed(row, columnMapping)) {
          skippedRows++;
          continue;
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
        const record = this.processRow(row, section.type, columnMapping);
        if (record) {
          // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º
          if (section.type === 'reviews') {
            processedData.reviews.push(record);
            processedData.statistics.totalReviews++;
          } else if (section.type === 'commentsTop20') {
            processedData.commentsTop20.push(record);
            processedData.statistics.totalCommentsTop20++;
          } else if (section.type === 'activeDiscussions') {
            processedData.activeDiscussions.push(record);
            processedData.statistics.totalActiveDiscussions++;
          }
          
          processedData.statistics.totalViews += record.views || 0;
          if (record.platform) {
            processedData.statistics.platforms.add(record.platform);
          }
          processedRows++;
          sectionRows++;
        } else {
          skippedRows++;
        }
      }
      
      console.log(`üìä –†–∞–∑–¥–µ–ª "${section.name}": ${sectionRows} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö`);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.stats.reviewsCount = processedData.statistics.totalReviews;
    this.stats.commentsTop20Count = processedData.statistics.totalCommentsTop20;
    this.stats.activeDiscussionsCount = processedData.statistics.totalActiveDiscussions;
    this.stats.totalViews = processedData.statistics.totalViews;
    
    console.log(`üìä –ò–¢–û–ì–û –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${processedRows} —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedRows} —Å—Ç—Ä–æ–∫`);
    console.log(`üìä –†–ï–ó–£–õ–¨–¢–ê–¢: ${processedData.statistics.totalReviews} –æ—Ç–∑—ã–≤–æ–≤, ${processedData.statistics.totalCommentsTop20} —Ç–æ–ø-20, ${processedData.statistics.totalActiveDiscussions} –æ–±—Å—É–∂–¥–µ–Ω–∏–π`);
    
    return processedData;
  }

  /**
   * üîß –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: findSectionBoundariesFixed()
   * –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü —Ä–∞–∑–¥–µ–ª–æ–≤
   */
  findSectionBoundariesFixed(data) {
    const sections = [];
    let currentSection = null;
    let sectionStart = -1;
    
    for (let i = CONFIG.STRUCTURE.dataStartRow - 1; i < data.length; i++) {
      const row = data[i];
      const firstCell = String(row[0] || '').toLowerCase().trim();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–∞–∑–¥–µ–ª–∞
      let sectionType = null;
      let sectionName = '';
      
      if (firstCell.includes('–æ—Ç–∑—ã–≤—ã') && !firstCell.includes('—Ç–æ–ø-20') && !firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è')) {
        sectionType = 'reviews';
        sectionName = '–û—Ç–∑—ã–≤—ã';
      } else if (firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ø-20') || firstCell.includes('—Ç–æ–ø-20 –≤—ã–¥–∞—á–∏')) {
        sectionType = 'commentsTop20';
        sectionName = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20';
      } else if (firstCell.includes('–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è') || firstCell.includes('–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')) {
        sectionType = 'activeDiscussions';
        sectionName = '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è';
      }
      
      // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
      if (sectionType && sectionType !== currentSection) {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–∞–∑–¥–µ–ª
        if (currentSection && sectionStart !== -1) {
          sections.push({
            type: currentSection,
            name: this.getSectionName(currentSection),
            startRow: sectionStart,
            endRow: i - 1
          });
        }
        
        // üîß –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å–æ –°–õ–ï–î–£–Æ–©–ï–ô —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        currentSection = sectionType;
        sectionStart = i + 1; // ‚úÖ –ë–´–õ–û: i, –°–¢–ê–õ–û: i + 1
        console.log(`üìÇ –ù–∞–π–¥–µ–Ω —Ä–∞–∑–¥–µ–ª "${sectionName}" –≤ —Å—Ç—Ä–æ–∫–µ ${i + 1}, –¥–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏ ${sectionStart + 1}`);
      }
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑–¥–µ–ª
    if (currentSection && sectionStart !== -1) {
      // –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–∏—Å–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É)
      let endRow = data.length - 1;
      for (let i = data.length - 1; i >= sectionStart; i--) {
        if (!this.isStatisticsRow(data[i]) && !this.isEmptyRow(data[i])) {
          endRow = i;
          break;
        }
      }
      
      sections.push({
        type: currentSection,
        name: this.getSectionName(currentSection),
        startRow: sectionStart,
        endRow: endRow
      });
    }
    
    return sections;
  }

  /**
   * üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: isDataRowFixed() - —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º columnMapping
   */
  isDataRowFixed(row, columnMapping) {
    if (!row || row.length < 5) return false; // –ú–∏–Ω–∏–º—É–º 5 –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏-–∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–π
    const firstCell = String(row[0] || '').toLowerCase().trim();
    if (firstCell === '–æ—Ç–∑—ã–≤—ã' || firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏') || firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è')) {
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–Ω–∞—á–∏–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–ª–æ–Ω–∫–µ "–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è" (–∏–Ω–¥–µ–∫—Å 4)
    const textIndex = columnMapping.text;
    const text = row[textIndex];
    
    if (text && String(text).trim().length > 10) {
      return true;
    }
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–ª–∏—á–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –¥–∞—Ç—ã
    const platformIndex = columnMapping.platform;
    const dateIndex = columnMapping.date;
    
    const hasPlatform = row[platformIndex] && String(row[platformIndex]).trim().length > 0;
    const hasDate = row[dateIndex] && String(row[dateIndex]).trim().length > 0;
    
    return hasPlatform && hasDate;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
   */
  processRow(row, currentSection, columnMapping) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
      if (!row || row.length === 0) {
        return null;
      }

      // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      const platform = this.extractPlatform(row, columnMapping);
      const text = this.extractText(row, columnMapping);
      const date = this.extractDate(row, columnMapping);
      const author = this.extractAuthor(row, columnMapping);
      const views = this.extractViews(row, columnMapping);
      const engagement = this.extractEngagement(row, columnMapping);
      const theme = this.extractTheme(row, columnMapping);
      const link = this.extractLink(row, columnMapping);
      
      // üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ —Ä–∞–∑–¥–µ–ª—É
      const type = this.determinePostTypeBySectionFixed(currentSection, row, text, columnMapping);
      
      // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      if (!platform && !text && !date) {
        return null;
      }

      return {
        platform: platform,
        theme: theme,
        text: text,
        date: date,
        author: author,
        views: views,
        engagement: engagement,
        type: type,
        link: link,
        section: currentSection
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏:', error);
      return null;
    }
  }

  /**
   * üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ —Ä–∞–∑–¥–µ–ª—É
   */
  determinePostTypeBySectionFixed(currentSection, row, text, columnMapping) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –°–¢–†–û–ì–û –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞–∑–¥–µ–ª–∞
    if (currentSection === 'reviews') {
      return '–û–°'; // –û—Ç–∑—ã–≤—ã —Å–∞–π—Ç–æ–≤
    } else if (currentSection === 'commentsTop20') {
      return '–¶–°'; // –¶–µ–ª–µ–≤—ã–µ —Å–∞–π—Ç—ã
    } else if (currentSection === 'activeDiscussions') {
      return '–ü–°'; // –ü–ª–æ—â–∞–¥–∫–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ
    }
    
    // –ï—Å–ª–∏ —Ä–∞–∑–¥–µ–ª –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –ª–æ–≥–∏–∫—É
    const postTypeIndex = columnMapping.postType;
    if (postTypeIndex !== undefined && row[postTypeIndex]) {
      const type = String(row[postTypeIndex]).trim().toLowerCase();
      if (type === '–æ—Å' || type === '–æ.—Å.') {
        return '–û–°';
      } else if (type === '—Ü—Å' || type === '—Ü.—Å.') {
        return '–¶–°';
      } else if (type === '–ø—Å' || type === '–ø.—Å.') {
        return '–ü–°';
      }
    }

    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return '–û–°';
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
   */
  isEmptyRow(row) {
    return !row || row.every(cell => !cell || String(cell).trim() === '');
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
   */
  extractPlatform(row, columnMapping) {
    const index = columnMapping.platform;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
   */
  extractText(row, columnMapping) {
    const index = columnMapping.text;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã
   */
  extractDate(row, columnMapping) {
    const index = columnMapping.date;
    if (index !== undefined && row[index]) {
      const dateValue = row[index];
      
      if (dateValue instanceof Date) {
        return Utilities.formatDate(dateValue, Session.getScriptTimeZone(), CONFIG.FORMATTING.DATE_FORMAT);
      }
      
      return String(dateValue);
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞
   */
  extractAuthor(row, columnMapping) {
    const index = columnMapping.author;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
   */
  extractViews(row, columnMapping) {
    const index = columnMapping.views;
    if (index !== undefined && row[index]) {
      const viewsValue = row[index];
      
      if (typeof viewsValue === 'number') {
        return viewsValue;
      }
      
      const parsed = parseInt(String(viewsValue).replace(/\D/g, ''));
      return isNaN(parsed) ? 0 : parsed;
    }
    return 0;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è
   */
  extractEngagement(row, columnMapping) {
    const index = columnMapping.engagement;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–º—ã
   */
  extractTheme(row, columnMapping) {
    const index = columnMapping.theme;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏
   */
  extractLink(row, columnMapping) {
    const index = columnMapping.link;
    if (index !== undefined && row[index]) {
      return String(row[index]).trim();
    }
    return '';
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
   */
  createReport(processedData) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ª–∏—Å—Ç —Å –Ω—É–∂–Ω—ã–º –∏–º–µ–Ω–µ–º
    const tempSpreadsheet = SpreadsheetApp.create(`temp_google_sheets_${Date.now()}_${this.monthInfo.name}_${this.monthInfo.year}_—Ä–µ–∑—É–ª—å—Ç–∞—Ç`);
    const reportSheetName = `${this.monthInfo.name}_${this.monthInfo.year}`;
    const sheet = tempSpreadsheet.getActiveSheet();
    sheet.setName(reportSheetName);
    
    // –®–∞–ø–∫–∞: –ü—Ä–æ–¥—É–∫—Ç, –ü–µ—Ä–∏–æ–¥, –ü–ª–∞–Ω
    sheet.getRange('A1').setValue('–ü—Ä–æ–¥—É–∫—Ç');
    sheet.getRange('B1').setValue('–ê–∫—Ä–∏—Ö–∏–Ω - –§–æ—Ä—Ç–µ–¥–µ—Ç—Ä–∏–º');
    sheet.getRange('A2').setValue('–ü–µ—Ä–∏–æ–¥');
    sheet.getRange('B2').setValue(`${this.monthInfo.name}-25`);
    sheet.getRange('A3').setValue('–ü–ª–∞–Ω');
    
    // 2. –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    const tableHeaders = ['–ü–ª–æ—â–∞–¥–∫–∞', '–¢–µ–º–∞', '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', '–î–∞—Ç–∞', '–ù–∏–∫', '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã', '–í–æ–≤–ª–µ—á–µ–Ω–∏–µ', '–¢–∏–ø –ø–æ—Å—Ç–∞'];
    let currentRow = 5;
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    for (let col = 0; col < tableHeaders.length; col++) {
      sheet.getRange(currentRow, col + 1).setValue(tableHeaders[col]);
    }
    currentRow++;
    
    // –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∞
    function writeSection(sectionName, dataArr) {
      if (dataArr.length === 0) return;
      
      // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
      sheet.getRange(currentRow, 1).setValue(sectionName);
      currentRow++;
      
      // –î–∞–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª–∞
      dataArr.forEach(record => {
        const rowData = [
          record.platform || '',
          record.theme || '',
          record.text || '',
          record.date || '',
          record.author || '',
          record.views || 0,
          record.engagement || '',
          record.type || ''
        ];
        
        for (let col = 0; col < rowData.length; col++) {
          sheet.getRange(currentRow, col + 1).setValue(rowData[col]);
        }
        currentRow++;
      });
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã
    writeSection('–û—Ç–∑—ã–≤—ã', processedData.reviews);
    writeSection('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20 –≤—ã–¥–∞—á–∏', processedData.commentsTop20);
    writeSection('–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)', processedData.activeDiscussions);
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    currentRow += 2;
    sheet.getRange(currentRow, 1).setValue('–°—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤');
    sheet.getRange(currentRow, 2).setValue(processedData.statistics.totalViews);
    currentRow++;
    
    sheet.getRange(currentRow, 1).setValue('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞ (–æ—Ç–∑—ã–≤—ã)');
    sheet.getRange(currentRow, 2).setValue(processedData.statistics.totalReviews);
    currentRow++;
    
    sheet.getRange(currentRow, 1).setValue('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π');
    sheet.getRange(currentRow, 2).setValue(processedData.statistics.totalActiveDiscussions);
    currentRow++;
    
    console.log(`üìÑ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${reportSheetName}`);
    
    return tempSpreadsheet.getUrl();
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞
   */
  extractMonthFromText(text) {
    const lowerText = text.toLowerCase();
    
    const months = [
      { name: '–Ø–Ω–≤–∞—Ä—å', variants: ['—è–Ω–≤–∞—Ä—å', '—è–Ω–≤', 'january', 'jan'], number: 1 },
      { name: '–§–µ–≤—Ä–∞–ª—å', variants: ['—Ñ–µ–≤—Ä–∞–ª—å', '—Ñ–µ–≤', 'february', 'feb'], number: 2 },
      { name: '–ú–∞—Ä—Ç', variants: ['–º–∞—Ä—Ç', '–º–∞—Ä', 'march', 'mar'], number: 3 },
      { name: '–ê–ø—Ä–µ–ª—å', variants: ['–∞–ø—Ä–µ–ª—å', '–∞–ø—Ä', 'april', 'apr'], number: 4 },
      { name: '–ú–∞–π', variants: ['–º–∞–π', 'may'], number: 5 },
      { name: '–ò—é–Ω—å', variants: ['–∏—é–Ω—å', '–∏—é–Ω', 'june', 'jun'], number: 6 },
      { name: '–ò—é–ª—å', variants: ['–∏—é–ª—å', '–∏—é–ª', 'july', 'jul'], number: 7 },
      { name: '–ê–≤–≥—É—Å—Ç', variants: ['–∞–≤–≥—É—Å—Ç', '–∞–≤–≥', 'august', 'aug'], number: 8 },
      { name: '–°–µ–Ω—Ç—è–±—Ä—å', variants: ['—Å–µ–Ω—Ç—è–±—Ä—å', '—Å–µ–Ω', 'september', 'sep'], number: 9 },
      { name: '–û–∫—Ç—è–±—Ä—å', variants: ['–æ–∫—Ç—è–±—Ä—å', '–æ–∫—Ç', 'october', 'oct'], number: 10 },
      { name: '–ù–æ—è–±—Ä—å', variants: ['–Ω–æ—è–±—Ä—å', '–Ω–æ—è', 'november', 'nov'], number: 11 },
      { name: '–î–µ–∫–∞–±—Ä—å', variants: ['–¥–µ–∫–∞–±—Ä—å', '–¥–µ–∫', 'december', 'dec'], number: 12 }
    ];
    
    // –ò—â–µ–º –≥–æ–¥
    const yearMatch = lowerText.match(/20(2[0-9]|[0-1][0-9])/);
    const year = yearMatch ? parseInt('20' + yearMatch[1]) : new Date().getFullYear();
    
    // –ò—â–µ–º –º–µ—Å—è—Ü
    for (const month of months) {
      for (const variant of month.variants) {
        if (lowerText.includes(variant)) {
          return {
            name: month.name,
            short: this.getMonthShort(month.number - 1),
            number: month.number,
            year: year
          };
        }
      }
    }
    
    return null;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞
   */
  getMonthName(monthIndex) {
    const months = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
                   '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'];
    return months[monthIndex];
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞
   */
  getMonthShort(monthIndex) {
    const months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω',
                   '–ò—é–ª', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫'];
    return months[monthIndex];
  }

  /**
   * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≤—Å–µ—Ö –º–µ—Å—è—Ü–µ–≤
   */
  getColumnMapping() {
    return {
      platform: 1,
      theme: 3,
      text: 4,
      date: 6,
      author: 7,
      views: 11,
      engagement: 12,
      postType: 13,
      link: 2
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∞
   */
  getSectionName(sectionType) {
    const names = {
      'reviews': '–û—Ç–∑—ã–≤—ã',
      'commentsTop20': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¢–æ–ø-20',
      'activeDiscussions': '–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è'
    };
    return names[sectionType] || sectionType;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
   */
  isSectionHeader(row) {
    if (!row || row.length === 0) return false;
    
    const firstCell = String(row[0] || '').toLowerCase().trim();
    return firstCell.includes('–æ—Ç–∑—ã–≤—ã') || 
           firstCell.includes('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏') || 
           firstCell.includes('–æ–±—Å—É–∂–¥–µ–Ω–∏—è') ||
           firstCell.includes('—Ç–æ–ø-20') ||
           firstCell.includes('–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
   */
  isStatisticsRow(row) {
    if (!row || row.length === 0) return false;
    
    const firstCell = String(row[0] || '').toLowerCase().trim();
    return firstCell.includes('—Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤') || 
           firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞') ||
           firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
           firstCell.includes('–¥–æ–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏–π') ||
           firstCell.includes('–ø–ª–æ—â–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π') ||
           firstCell.includes('–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—á—Ç–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è');
  }
}

// ==================== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 */
function processMonthlyReportFixed(spreadsheetId = null, sheetName = null) {
  const processor = new FixedMonthlyReportProcessor();
  
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
  }
  
  return processor.processReport(spreadsheetId, sheetName);
}

/**
 * –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ª–∏—Å—Ç–∞
 */
function quickProcessFixed() {
  return processMonthlyReportFixed();
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤—ã–±–æ—Ä–æ–º –ª–∏—Å—Ç–∞
 */
function processWithSheetSelectionFixed() {
  const ui = SpreadsheetApp.getUi();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  
  const sheetNames = sheets.map(sheet => sheet.getName());
  const response = ui.prompt(
    '–í—ã–±–æ—Ä –ª–∏—Å—Ç–∞',
    `–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã:\n${sheetNames.join('\n')}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:`,
    ui.ButtonSet.OK_CANCEL
  );
  
  if (response.getSelectedButton() === ui.Button.OK) {
    const selectedSheet = response.getResponseText().trim();
    return processMonthlyReportFixed(spreadsheet.getId(), selectedSheet);
  }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
 */
function updateMenuFixed() {
  const ui = SpreadsheetApp.getUi();
  ui.createMenu('üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—á–µ—Ç–æ–≤ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø)')
    .addItem('–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)', 'quickProcessFixed')
    .addItem('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –≤—ã–±–æ—Ä–æ–º –ª–∏—Å—Ç–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)', 'processWithSheetSelectionFixed')
    .addSeparator()
    .addItem('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'showSettingsFixed')
    .addToUi();
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */
function showSettingsFixed() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    '–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (v4.0.0)',
    `–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:\n` +
    `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–∑–¥–µ–ª–æ–≤ (sectionStart = i + 1)\n` +
    `‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ –≥—Ä–∞–Ω–∏—Ü–∞–º\n` +
    `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º\n` +
    `‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Å columnMapping\n\n` +
    `–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:\n` +
    `- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ: ${CONFIG.STRUCTURE.headerRow}\n` +
    `- –î–∞–Ω–Ω—ã–µ —Å —Å—Ç—Ä–æ–∫–∏: ${CONFIG.STRUCTURE.dataStartRow}\n` +
    `- –û—Ç–ª–∞–¥–∫–∞: ${CONFIG.TESTING.ENABLE_DEBUG ? '–í–∫–ª—é—á–µ–Ω–∞' : '–í—ã–∫–ª—é—á–µ–Ω–∞'}`,
    ui.ButtonSet.OK
  );
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
 */
function onOpen() {
  updateMenuFixed();
} 